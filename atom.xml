<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安逸的小猫</title>
  <subtitle>苟有恒，何必三更眠、五更起；最无益，莫过一日曝、十日寒。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://duansiman.github.io/"/>
  <updated>2017-04-17T10:49:41.410Z</updated>
  <id>https://duansiman.github.io/</id>
  
  <author>
    <name>Devin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL 知识点</title>
    <link href="https://duansiman.github.io/2017/04/17/MySQL-%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://duansiman.github.io/2017/04/17/MySQL-知识点/</id>
    <published>2017-04-17T10:40:55.000Z</published>
    <updated>2017-04-17T10:49:41.410Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置文件在/etc/mysql/my.cnf,一些配置内容如下：</p>
<pre><code>max_connections        
    最大支持连接数，设置到500～1000比较合适
wait-timeout        
    数据库连接闲置最大时间值，默认值为8小时 
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;配置文件在/etc/mysql/my.cnf,一些配置内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;max_connections       
    
    </summary>
    
      <category term="数据库" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL知识点" scheme="https://duansiman.github.io/tags/MySQL%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>Linux 常用命令</title>
    <link href="https://duansiman.github.io/2017/04/17/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://duansiman.github.io/2017/04/17/Linux-常用命令/</id>
    <published>2017-04-17T03:07:22.000Z</published>
    <updated>2017-04-17T10:56:44.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><p>####删除</p>
<pre><code>x, X       x 为向后删除一个字符, X为向前删除一个字符
nx         连续向后删除 n 个字符
dd         删除游标所在这行
ndd        删除游标所在向下n行
d1G        删除光标所在到第一行的所有数据
dG         删除光标所在到最后一行的所有数据
d$         删除游标所在处，到该行的最后一个字符
d0         删除游标所在处，到该行的最前面一个字符
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;vim&quot;&gt;&lt;a href=&quot;#vim&quot; class=&quot;headerlink&quot; title=&quot;vim&quot;&gt;&lt;/a&gt;vim&lt;/h2&gt;&lt;p&gt;####删除&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x, X       x 为向后删除一个字符, X为向前删除一个字符
nx       
    
    </summary>
    
      <category term="Linux" scheme="https://duansiman.github.io/categories/Linux/"/>
    
    
      <category term="Linux常用命令" scheme="https://duansiman.github.io/tags/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Linux 知识点</title>
    <link href="https://duansiman.github.io/2017/04/17/Linux-%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://duansiman.github.io/2017/04/17/Linux-知识点/</id>
    <published>2017-04-17T02:47:21.000Z</published>
    <updated>2017-04-17T10:56:54.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="源列表"><a href="#源列表" class="headerlink" title="源列表"></a>源列表</h2><p>Linux存放源有两个地方：/etc/apt/sources.list和/etc/apt/sources.list.d/*.list，后一个通常用来安装第三方的软件<br>sources.list文件内容：</p>
<pre><code>开头是deb或者deb-src，通过.deb文件进行安装和通过源文件的方式进行安装。
URL后面的字符串，分别对应相应的目录结构。进入dists目录，就看到URL后目录结构
</code></pre><h2 id="查看端口占用"><a href="#查看端口占用" class="headerlink" title="查看端口占用"></a>查看端口占用</h2><pre><code>lsof -i:端口号                            查看占用该端口的进程
netstat -ntlup | grep 端口号                  根据端口搜索进程
ps -ef | grep 进程号                        查看进程
netstat –apn                            查看所有的进程和端口使用情况
kill -9 processId                        杀进程
</code></pre><h2 id="物理CPU、逻辑CPU和CPU核数"><a href="#物理CPU、逻辑CPU和CPU核数" class="headerlink" title="物理CPU、逻辑CPU和CPU核数"></a>物理CPU、逻辑CPU和CPU核数</h2><p>####物理CPU<br>插槽上的CPU个数,物理cpu数量，可以数不重复的 physical id 有几个。</p>
<p>####逻辑CPU<br>/proc/cpuinfo 文件,用来存储cpu硬件信息的.列出了processor 0 – n 的规格,n不是真实的cpu数<br>一颗cpu可以有多核，加上intel的超线程技术(HT), 可以在逻辑上再分一倍数量的cpu core<br>逻辑CPU数量=物理cpu数量 x cpu cores 这个规格值 x 2(如果支持并开启ht)</p>
<pre><code>Linux下top查看的CPU也是逻辑CPU个数
</code></pre><p>####查看物理CPU的个数<br>    cat /proc/cpuinfo |grep “physical id”|sort |uniq|wc -l</p>
<p>####查看逻辑CPU的个数<br>    cat /proc/cpuinfo |grep “processor”|wc -l</p>
<p>####查看CPU是几核<br>    cat /proc/cpuinfo |grep “cores”|uniq</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;源列表&quot;&gt;&lt;a href=&quot;#源列表&quot; class=&quot;headerlink&quot; title=&quot;源列表&quot;&gt;&lt;/a&gt;源列表&lt;/h2&gt;&lt;p&gt;Linux存放源有两个地方：/etc/apt/sources.list和/etc/apt/sources.list.d/*.list
    
    </summary>
    
      <category term="Linux" scheme="https://duansiman.github.io/categories/Linux/"/>
    
    
      <category term="Linux知识点" scheme="https://duansiman.github.io/tags/Linux%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>加密、解密</title>
    <link href="https://duansiman.github.io/2017/04/14/%E5%8A%A0%E5%AF%86%E3%80%81%E8%A7%A3%E5%AF%86/"/>
    <id>https://duansiman.github.io/2017/04/14/加密、解密/</id>
    <published>2017-04-14T09:00:53.000Z</published>
    <updated>2017-04-17T10:51:44.232Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h2><p>　　Base64编码要求把3个8位字节（3<em>8=24）转化为4个6位的字节（4</em>6=24），之后在6位的前面补两个0，形成8位一个字节的形式。 如果剩下的字符不足3个字节，则用0填充，输出字符使用‘=’，因此编码后输出的文本末尾可能会出现‘=’。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Base64&quot;&gt;&lt;a href=&quot;#Base64&quot; class=&quot;headerlink&quot; title=&quot;Base64&quot;&gt;&lt;/a&gt;Base64&lt;/h2&gt;&lt;p&gt;　　Base64编码要求把3个8位字节（3&lt;em&gt;8=24）转化为4个6位的字节（4&lt;/em&gt;6=24），之
    
    </summary>
    
      <category term="计算机" scheme="https://duansiman.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="编码" scheme="https://duansiman.github.io/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的配置</title>
    <link href="https://duansiman.github.io/2017/04/12/Hexo%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>https://duansiman.github.io/2017/04/12/Hexo的配置/</id>
    <published>2017-04-12T02:20:34.000Z</published>
    <updated>2017-04-17T10:56:27.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h2><p>　<a href="https://hexo.io/themes/" target="_blank" rel="external">官方主题网站</a>，在主题下载放到themes目录。然后修改_config.yml配置文件<br>　<img src="/2017/04/12/Hexo的配置/1.jpg" alt=""></p>
<h2 id="评论插件"><a href="#评论插件" class="headerlink" title="评论插件"></a>评论插件</h2><p>　使用的是<a href="https://github.com/giscafer/hexo-theme-cafe" target="_blank" rel="external">Cafe</a>主题，由于<a href="http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241" target="_blank" rel="external">多说</a>项目关闭，所以使用时国外<a href="https://disqus.com/" target="_blank" rel="external">Disqus</a>评论。<br><br>　Cafe的_config.yml配置文件有说明，在博客的_config.yml文件配置disqus的账号就可以<br>　<img src="/2017/04/12/Hexo的配置/2.jpg" alt=""></p>
<h4 id="注册Disqus账号"><a href="#注册Disqus账号" class="headerlink" title="注册Disqus账号"></a>注册Disqus账号</h4><p>　在admin里，setting里的shortname名字才是配置到_config.yml文件中的<br>　<img src="/2017/04/12/Hexo的配置/3.jpg" alt=""></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>　配置像这个分层次的分类<br>　<img src="/2017/04/12/Hexo的配置/4.jpg" alt=""><br>　<img src="/2017/04/12/Hexo的配置/5.jpg" alt=""></p>
<h2 id="云标签"><a href="#云标签" class="headerlink" title="云标签"></a>云标签</h2><p>　把Cafe的tagcloud_color设置为true<br>　<img src="/2017/04/12/Hexo的配置/6.jpg" alt=""></p>
<h2 id="配置关于界面"><a href="#配置关于界面" class="headerlink" title="配置关于界面"></a>配置关于界面</h2><p>　使用hexo new page “about”创建about的页面，在_config.yml中可以修改about名称<br>　<img src="/2017/04/12/Hexo的配置/7.jpg" alt=""></p>
<h2 id="文章中插入图片"><a href="#文章中插入图片" class="headerlink" title="文章中插入图片"></a>文章中插入图片</h2><p>　在博客的_config.yml文件设置post_asset_folder为true。在建立文件时，Hexo会自动建立一个与文章同名的文件夹，用来放资源的。<br>然后安装<a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="external">hexo-asset-image</a>插件npm install hexo-asset-image –save。通过下面方法就可以在文章插入图片。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![logo](本地图片测试/logo.jpg) 其中[]里面不写文字则没有图片标题。</div><div class="line">而&#123;% asset_img example.jpg this is an example image %&#125; 生成HTML文件图片路径错误</div></pre></td></tr></table></figure></p>
<h2 id="RSS订阅"><a href="#RSS订阅" class="headerlink" title="RSS订阅"></a>RSS订阅</h2><p>执行命令安装插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure></p>
<p>在博客的_config.yml文件配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># RSS订阅支持</span></div><div class="line">plugin:</div><div class="line">- hexo-generator-feed</div><div class="line"></div><div class="line"><span class="comment"># Feed Atom</span></div><div class="line">feed:</div><div class="line"><span class="built_in">type</span>: atom</div><div class="line">path: atom.xml</div><div class="line"><span class="built_in">limit</span>: 20</div></pre></td></tr></table></figure></p>
<h2 id="Google-Analytics"><a href="#Google-Analytics" class="headerlink" title="Google Analytics"></a>Google Analytics</h2><p>　在主题的_config.yml文件配置如下,id是Google Analytics生成的追踪id,需要去Google Analytics官网创建。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">google_analytics:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  id: UA-97173941-1</div><div class="line">  site: auto</div></pre></td></tr></table></figure></p>
<h2 id="提交搜索引擎（百度-谷歌）"><a href="#提交搜索引擎（百度-谷歌）" class="headerlink" title="提交搜索引擎（百度+谷歌）"></a>提交搜索引擎（百度+谷歌）</h2><p>　<a href="http://www.jianshu.com/p/619dab2d3c08" target="_blank" rel="external">参考博客</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;设置主题&quot;&gt;&lt;a href=&quot;#设置主题&quot; class=&quot;headerlink&quot; title=&quot;设置主题&quot;&gt;&lt;/a&gt;设置主题&lt;/h2&gt;&lt;p&gt;　&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;extern
    
    </summary>
    
      <category term="Blog" scheme="https://duansiman.github.io/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="https://duansiman.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Git常遇到问题场景</title>
    <link href="https://duansiman.github.io/2017/04/11/Git%E5%B8%B8%E9%81%87%E5%88%B0%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    <id>https://duansiman.github.io/2017/04/11/Git常遇到使用场景/</id>
    <published>2017-04-11T10:52:59.000Z</published>
    <updated>2017-04-12T02:18:00.959Z</updated>
    
    <content type="html"><![CDATA[<h2 id="删除仓库中目录或文件"><a href="#删除仓库中目录或文件" class="headerlink" title="删除仓库中目录或文件"></a>删除仓库中目录或文件</h2><p>　git rm -r 目录 或者 git rm 文件<br>　git commit -m “” 提交<br>　误删可以恢复<br>　git checkout – 文件</p>
<h2 id="忽略特殊文件"><a href="#忽略特殊文件" class="headerlink" title="忽略特殊文件"></a>忽略特殊文件</h2><p>　在git工作区间根目录创建.gitignore文件，然后把要忽略的文件添加进去。<br>　Window环境创建该文件会提示输入文件名，但是在文本编辑器里“保存”或者“另存为”就可以把文件保存为.gitignore 然后把该文件提交到git<br>　A、被忽略的文件，要强制添加到git<br>　　　git add -f 文件<br>　B、查看忽略文件被个规则忽略了<br>　　　git check-ignore -v 文件<br>　常见的忽略文件：<a href="https://github.com/github/gitignore" target="_blank" rel="external">https://github.com/github/gitignore</a></p>
<h2 id="撤销文件修改"><a href="#撤销文件修改" class="headerlink" title="撤销文件修改"></a>撤销文件修改</h2><p>　A、已经git add到暂存区，如图：<br>　<img src="/2017/04/11/Git常遇到使用场景/1.png" alt=""><br>　<img src="/2017/04/11/Git常遇到使用场景/2.png" alt=""><br>　git reset HEAD file 可把暂存区的修改销掉，重新放回工作区<br>　git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。<br><br><br>　B、还没git add到暂存区，如图：<br>　<img src="/2017/04/11/Git常遇到使用场景/3.png" alt=""><br>　git checkout – 文件 丢弃工作区的修改<br>　命令“git checkout – 文件”是：把readme.txt文件在工作区的修改全部撤销，这里有两种情况：<br>　一种是readme.txt自修改后还没有被放到暂存区，撤销修改就回到和版本库一模一样的状态；<br>　一种是readme.txt已经添加到暂存区后，又作了修改，撤销修改就回到添加到暂存区后的状态。</p>
<h2 id="删除仓库中文件，本地文件保留"><a href="#删除仓库中文件，本地文件保留" class="headerlink" title="删除仓库中文件，本地文件保留"></a>删除仓库中文件，本地文件保留</h2><p>　git rm –cached filename<br>　git rm -r –cached path</p>
<h2 id="让git-push命令不需要密码"><a href="#让git-push命令不需要密码" class="headerlink" title="让git push命令不需要密码"></a>让git push命令不需要密码</h2><p>　GitHub获得远程库时，有ssh方式和https方式。使用ssh时保存密钥对以后可以不再输入帐号密码，而https却不能。已经存在的项目修改.git目录下的config文件中的url。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;删除仓库中目录或文件&quot;&gt;&lt;a href=&quot;#删除仓库中目录或文件&quot; class=&quot;headerlink&quot; title=&quot;删除仓库中目录或文件&quot;&gt;&lt;/a&gt;删除仓库中目录或文件&lt;/h2&gt;&lt;p&gt;　git rm -r 目录 或者 git rm 文件&lt;br&gt;　git com
    
    </summary>
    
      <category term="Git" scheme="https://duansiman.github.io/categories/Git/"/>
    
    
      <category term="Git问题场景" scheme="https://duansiman.github.io/tags/Git%E9%97%AE%E9%A2%98%E5%9C%BA%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>Redis 错误集</title>
    <link href="https://duansiman.github.io/2017/04/07/Redis-%E5%AE%89%E8%A3%85/"/>
    <id>https://duansiman.github.io/2017/04/07/Redis-安装/</id>
    <published>2017-04-07T06:38:41.000Z</published>
    <updated>2017-04-13T09:14:17.007Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis安装"><a href="#Redis安装" class="headerlink" title="Redis安装"></a>Redis安装</h2><pre><code>/bin/sh: 1: cc: not found
</code></pre><p>需要安装gcc</p>
<pre><code>fatal error: jemalloc/jemalloc.h: No such file or directory
</code></pre><p>博客<a href="http://blog.csdn.net/bugall/article/details/45914867" target="_blank" rel="external">http://blog.csdn.net/bugall/article/details/45914867</a></p>
<pre><code>You need tcl 8.5 or newer in order to run the Redis test
</code></pre><p>可以不运行redis test, tcl官网<a href="http://www.linuxfromscratch.org/blfs/view/cvs/general/tcl.html" target="_blank" rel="external">http://www.linuxfromscratch.org/blfs/view/cvs/general/tcl.html</a></p>
<h2 id="Redis代码访问"><a href="#Redis代码访问" class="headerlink" title="Redis代码访问"></a>Redis代码访问</h2><pre><code>java.lang.ClassNotFoundException: redis.clients.jedis.GeoUnit
</code></pre><p>jedis包版本问题</p>
<pre><code>Cannot get Jedis connection; nested exception is redis.clients.jedis.exceptions.JedisConnectionException: 
Could not get a resource from the pool
java.net.SocketTimeoutException: connect timed out
</code></pre><p>redis配置文件，绑定了id，把bind 127.0.0.1注释掉</p>
<h2 id="Redis-命令学习"><a href="#Redis-命令学习" class="headerlink" title="Redis 命令学习"></a>Redis 命令学习</h2><pre><code>(error) NOAUTH Authentication required.
</code></pre><p>通过auth输入密码，auth “yourpassword”</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Redis安装&quot;&gt;&lt;a href=&quot;#Redis安装&quot; class=&quot;headerlink&quot; title=&quot;Redis安装&quot;&gt;&lt;/a&gt;Redis安装&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;/bin/sh: 1: cc: not found
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Redis" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis/"/>
    
    
      <category term="Redis" scheme="https://duansiman.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>SQL  常用语句</title>
    <link href="https://duansiman.github.io/2017/04/06/SQL-%E5%B8%B8%E7%94%A8%E8%AF%AD%E5%8F%A5/"/>
    <id>https://duansiman.github.io/2017/04/06/SQL-常用语句/</id>
    <published>2017-04-06T07:14:32.000Z</published>
    <updated>2017-04-17T10:56:38.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><p>####数据导入导出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mysqldump -u用户名 -p密码  数据库名 &gt; 导出的文件名 </div><div class="line">	导出整个数据库</div><div class="line">mysqldump -u用户名 -p密码  数据库名 表名&gt; 导出的文件名 </div><div class="line">	导出一个表，包括表结构和数据</div><div class="line">mysqldump -u用户名 -p密码 <span class="_">-d</span> 数据库名 &gt; e:\sva_rec.sql </div><div class="line">	导出一个数据库结构</div><div class="line">mysqldump -u用户名 -p 密码 <span class="_">-d</span>数据库名  表名&gt; 导出的文件名</div><div class="line">	导出一个表，只有表结构 </div><div class="line"><span class="built_in">source</span> sql文件</div><div class="line">	导入数据库</div></pre></td></tr></table></figure></p>
<p>####连接数及状态信息<br>    show status like ‘%connect%’<br>        show status  查看所有状态参数，Threads_connected 当前的连接数，Connections 试图连接，max_used_connections并发过过最大数量<br>    show processlist;<br>        显示当前正在执行的mysql连接<br>    mysqladmin -u -p -h status<br>        显示当前mysql状态<br>    mysqladmin -u -p -h extended-status<br>        显示mysql的其他状态</p>
<h2 id="表"><a href="#表" class="headerlink" title="表"></a>表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">describe t_user		</div><div class="line">	查看表结构</div><div class="line">alter table t_user modify id smallint(5) unsigned;	</div><div class="line">	修改字段类型</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MySQL&quot;&gt;&lt;a href=&quot;#MySQL&quot; class=&quot;headerlink&quot; title=&quot;MySQL&quot;&gt;&lt;/a&gt;MySQL&lt;/h2&gt;&lt;p&gt;####数据导入导出&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
    
    </summary>
    
      <category term="数据库" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="SQL语句" scheme="https://duansiman.github.io/tags/SQL%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 搭建个人博客</title>
    <link href="https://duansiman.github.io/2017/03/31/Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://duansiman.github.io/2017/03/31/Hexo-搭建个人博客/</id>
    <published>2017-03-31T06:33:13.000Z</published>
    <updated>2017-04-11T09:11:06.726Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><p>使用<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a>搭建个人博客，需要安装<a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a>和<a href="http://git-scm.com/" target="_blank" rel="external">Git</a>，最后安装Hexo</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure>
<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>生产博客网站需要的资源，随便指定一个目录名字<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo init &lt;folder&gt;</div><div class="line"><span class="built_in">cd</span> &lt;folder&gt;</div><div class="line">npm install</div></pre></td></tr></table></figure></p>
<p>执行命令，出现错误Error: Cannot find module ‘/root/hexo_blog/node_modules/dtrace-provider/scripts/install.js’，可能是Node.js版本兼容，可以低版本。我的安装环境：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ hexo -v</div><div class="line">hexo: 3.2.2</div><div class="line">hexo-cli: 1.0.2</div><div class="line">os: Windows_NT 6.1.7601 win32 x64</div><div class="line">http_parser: 2.7.0</div><div class="line">node: 6.9.5</div><div class="line">v8: 5.1.281.89</div><div class="line">uv: 1.9.1</div><div class="line">zlib: 1.2.8</div><div class="line">ares: 1.10.1-DEV</div><div class="line">icu: 57.1</div><div class="line">modules: 48</div><div class="line">openssl: 1.0.2k</div></pre></td></tr></table></figure></p>
<h2 id="关联GitHub"><a href="#关联GitHub" class="headerlink" title="关联GitHub"></a>关联GitHub</h2><p>把博客网站资源放到Github上，这样可以通过互联网访问。在GitHub上创建一个仓库，名字为youname.github.io，必须是这格式。然后在hexo资源目录下的_config.yml文件最后加上：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy: </div><div class="line">    <span class="built_in">type</span>: git</div><div class="line">    repository: https://github.com/duansiman/duansiman.github.io.git</div><div class="line">    branch: master</div></pre></td></tr></table></figure></p>
<p>最后生产资源文件，部署到GitHub上。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure></p>
<p>访问地址duansiman.github.io</p>
<h2 id="发表文章"><a href="#发表文章" class="headerlink" title="发表文章"></a>发表文章</h2><p>执行如下命令,会生成md文件。然后生成资源文件，部署到Github上。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new <span class="string">"article title"</span></div></pre></td></tr></table></figure></p>
<p>推荐编辑md文件工具<a href="http://markdownpad.com/" target="_blank" rel="external">MarkdownPad</a>，它的<a href="http://www.jianshu.com/p/9e5cd946696d" target="_blank" rel="external">注册码</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备环境&quot;&gt;&lt;a href=&quot;#准备环境&quot; class=&quot;headerlink&quot; title=&quot;准备环境&quot;&gt;&lt;/a&gt;准备环境&lt;/h2&gt;&lt;p&gt;使用&lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;extern
    
    </summary>
    
      <category term="Blog" scheme="https://duansiman.github.io/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="https://duansiman.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
