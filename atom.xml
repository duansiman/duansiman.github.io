<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安逸的小猫</title>
  <subtitle>苟有恒，何必三更眠、五更起；最无益，莫过一日曝、十日寒。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://duansiman.github.io/"/>
  <updated>2017-05-05T10:05:09.120Z</updated>
  <id>https://duansiman.github.io/</id>
  
  <author>
    <name>Devin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux-运维</title>
    <link href="https://duansiman.github.io/2017/05/05/Linux-%E8%BF%90%E7%BB%B4/"/>
    <id>https://duansiman.github.io/2017/05/05/Linux-运维/</id>
    <published>2017-05-05T10:01:21.000Z</published>
    <updated>2017-05-05T10:05:09.120Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改SSH端口和禁止Root远程登录"><a href="#修改SSH端口和禁止Root远程登录" class="headerlink" title="修改SSH端口和禁止Root远程登录"></a>修改SSH端口和禁止Root远程登录</h2><p>修改端口</p>
<pre><code>/etc/ssh/sshd_config文件中
修改SSH端口，修改port后的端口
</code></pre><p>禁止Root远程登录：</p>
<pre><code>把PermitRootLogin yes 改为 PermitRootLogin no
重启服务，service ssh restart
</code></pre><h2 id="流量监控"><a href="#流量监控" class="headerlink" title="流量监控"></a>流量监控</h2><h4 id="vnstat"><a href="#vnstat" class="headerlink" title="vnstat"></a>vnstat</h4><p>安装</p>
<pre><code>apt-get install vnstat
</code></pre><p>创建监听数据库</p>
<pre><code>vnstat -u -i eth0    -&gt;    eth0是系统网卡
</code></pre><p>启动服务</p>
<pre><code>service vnstat start
</code></pre><p>开机自启动，在/etc/rc.local文件中加：</p>
<pre><code>service vnstat start
</code></pre><p>查看流量情况命令</p>
<pre><code>每天的，vnstat -d
每月的，vnstat -m    
实时流量，vnstat -l -i eth0
查看五秒平均流量，vnstat -tr -i eth0
</code></pre><p>不能统计流量，需要修改.eh0权限，在/var/lib/vnstat目录中</p>
<pre><code>chown vnstat:vnstat .eth0 -R
chmod 0640 .eth0
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;修改SSH端口和禁止Root远程登录&quot;&gt;&lt;a href=&quot;#修改SSH端口和禁止Root远程登录&quot; class=&quot;headerlink&quot; title=&quot;修改SSH端口和禁止Root远程登录&quot;&gt;&lt;/a&gt;修改SSH端口和禁止Root远程登录&lt;/h2&gt;&lt;p&gt;修改端口&lt;/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git</title>
    <link href="https://duansiman.github.io/2017/05/05/Git/"/>
    <id>https://duansiman.github.io/2017/05/05/Git/</id>
    <published>2017-05-05T09:03:22.000Z</published>
    <updated>2017-05-05T09:25:04.780Z</updated>
    
    <content type="html"><![CDATA[<pre><code>git status        查看状态
git init        初始化 git 仓库
git fsck        仓库一致性检查
git gc            压缩
</code></pre><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><pre><code>git log 查看日志
</code></pre><p>git config –global alias.lg “log –graph –pretty=format:’%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ –abbrev-commit –date=relative”</p>
<h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p>ssh-keygen -t rsa                    生成公钥密钥</p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>设置全局账号</p>
<pre><code>git config --global user.email &quot;you@example.com&quot;
git config --global user.name &quot;Your Name&quot;
</code></pre><p>设置账号</p>
<pre><code>git config  user.email &quot;you@example.com&quot;
git config  user.name &quot;Your Name&quot;
</code></pre><p>设置别名，即 git co == git checkout</p>
<pre><code>git config --global alias.co checkout   # 别名
git config --global alias.psm &apos;push origin master&apos;
</code></pre><p>默认情况下 git 用的编辑器是 vi，设置Editor使用vim                  </p>
<pre><code>git config --global core.editor &quot;vim&quot;
</code></pre><p>开启给 Git 着色</p>
<pre><code>git config --global color.ui true
</code></pre><p>设置显示中文文件名                              </p>
<pre><code>git config --global core.quotepath false
</code></pre><p>增加Git’s HTTP buffer                         </p>
<pre><code>git config http.postBuffer 524288000    
</code></pre><p>默认这些配置都在 ~/.gitconfig，可以输入 git config -l 命令查看</p>
<h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><pre><code>git diff                                                
    提交前查看有哪些改动
git add                            
    提交的文件
git commit -m ‘注释’                    
    提交
git add &amp; git commit                    
    把改动添加到一个「暂存区」然后提交，防止误提交
git rm --cached                        
    移除未提交的缓存
</code></pre><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><pre><code>git branch                                
    查看下本地分支情况
git branch -a                        
    查看所有分支，包括本地和远程
git branch -r                        
    查看远程分支
git branch test                        
    新建分支test
git branch -d test                    
    删除分支test
git branch -D test                    
    强制删除分支test，如果test分支没有整合
</code></pre><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><pre><code>git tag                            查看版本
git tag v1.0                        贴标签，版本控制
</code></pre><h2 id="切换"><a href="#切换" class="headerlink" title="切换"></a>切换</h2><pre><code>git checkout test                    切换分支
git checkout origin/test                把远程分支test，拉到本地
git checkout -b test                    新建分支test，并切换到test分支下
git checkout v1.0                    切换到每个标签，即版本
</code></pre><h2 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h2><pre><code>git checkout a.md                    
    把原文件还原，只能撤销还没有 add 进暂存区的文件
git checkout file1 file2 ... fileN             
    一次回滚多个文件，中间用空格隔开即可
git checkout .                         
    直接回滚当前目录一下的所有working tree内的修改，会递归扫描当前目录下的所有子目录
</code></pre><h2 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h2><pre><code>git merge    test                        合并分支， 在master分支执行这命令
</code></pre><h2 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h2><pre><code>git push origin master                本地代码推到远程 master 分支
git push -f                                           强推，覆盖相同的内容
git pull origin master                远程最新的代码更新到本地
git clone url                        把项目 clone 到了本地
</code></pre><h2 id="关联"><a href="#关联" class="headerlink" title="关联"></a>关联</h2><pre><code>git remote add origin url                与 GitHub 上的项目进行关联,origin 是给这个项目的远程仓库起的名字
git remote remove &lt;name&gt;                 取消关联
git remote rm 分支                    删除关联
git remote -v                        当前项目有哪些远程仓库    
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;git status        查看状态
git init        初始化 git 仓库
git fsck        仓库一致性检查
git gc            压缩
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;日志&quot;&gt;&lt;a href=&quot;
    
    </summary>
    
      <category term="Git" scheme="https://duansiman.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://duansiman.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>快捷键</title>
    <link href="https://duansiman.github.io/2017/05/04/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://duansiman.github.io/2017/05/04/快捷键/</id>
    <published>2017-05-04T08:26:06.000Z</published>
    <updated>2017-05-04T08:44:33.670Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sublime-text-3"><a href="#Sublime-text-3" class="headerlink" title="Sublime text 3"></a>Sublime text 3</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Ctrl Shift L</td>
<td style="text-align:left">选中多行编辑</td>
</tr>
<tr>
<td style="text-align:left">Ctrl J</td>
<td style="text-align:left">多行变一行</td>
</tr>
</tbody>
</table>
<h2 id="IntelliJ-IDEA"><a href="#IntelliJ-IDEA" class="headerlink" title="IntelliJ IDEA"></a>IntelliJ IDEA</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Ctrl+Shift+V</td>
<td style="text-align:left">选择剪切板上的文本进行插入</td>
</tr>
<tr>
<td style="text-align:left">右击断点</td>
<td style="text-align:left">可以看到断点属性</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+H</td>
<td style="text-align:left">打开类的层次结构</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+W</td>
<td style="text-align:left">选择文本</td>
</tr>
<tr>
<td style="text-align:left">Alt+F8/Alt+点击表达式</td>
<td style="text-align:left">调试时看表达式值</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Q</td>
<td style="text-align:left">查看文档说明</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+P</td>
<td style="text-align:left">查看方法参数提示</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+B</td>
<td style="text-align:left">打开方法或类声明地方</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+N</td>
<td style="text-align:left">搜索类</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+N</td>
<td style="text-align:left">搜索文件</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+Alt+N</td>
<td style="text-align:left">搜索文本</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Alt+V</td>
<td style="text-align:left">把表达式提出为局部</td>
</tr>
<tr>
<td style="text-align:left">Alt+Shift+C</td>
<td style="text-align:left">查看项目最近修改地方</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+`</td>
<td style="text-align:left">修改style/color scheme or keymap</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+Enter</td>
<td style="text-align:left">自动补全代码if,do-while,return,try-catch</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Alt+Shift+C</td>
<td style="text-align:left">复制field/method/class/file</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+向下上箭头</td>
<td style="text-align:left">移动代码块</td>
</tr>
<tr>
<td style="text-align:left">Alt+Shift+F10</td>
<td style="text-align:left">打开run/debug菜单</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+I</td>
<td style="text-align:left">预览class/file/symbol代码</td>
</tr>
<tr>
<td style="text-align:left">Shift+F6</td>
<td style="text-align:left">重命名</td>
</tr>
<tr>
<td style="text-align:left">Alt+Home</td>
<td style="text-align:left">导航栏，修改项目view</td>
</tr>
<tr>
<td style="text-align:left">Alt+F7</td>
<td style="text-align:left">搜索方法，变量在哪被引用</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+F</td>
<td style="text-align:left">全局搜索</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+Z</td>
<td style="text-align:left">反撤销，Ctrl+Z的反操作</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Sublime-text-3&quot;&gt;&lt;a href=&quot;#Sublime-text-3&quot; class=&quot;headerlink&quot; title=&quot;Sublime text 3&quot;&gt;&lt;/a&gt;Sublime text 3&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th 
    
    </summary>
    
      <category term="计算机" scheme="https://duansiman.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="快捷键" scheme="https://duansiman.github.io/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>Maven</title>
    <link href="https://duansiman.github.io/2017/04/26/Maven/"/>
    <id>https://duansiman.github.io/2017/04/26/Maven/</id>
    <published>2017-04-26T07:37:02.000Z</published>
    <updated>2017-05-03T10:26:59.612Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre><code>mvn [options] [&lt;goal(s)&gt;] [&lt;phase(s)&gt;]
options     可以用mvn -h 或 mvn --help查看
phase        是生命周期阶段
</code></pre><h2 id="生命周期阶段"><a href="#生命周期阶段" class="headerlink" title="生命周期阶段"></a>生命周期阶段</h2><p>有clean、default和site几类，下面出现的顺序就是执行顺序。</p>
<h4 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h4><p>pre-clean, clean, post-clean</p>
<h4 id="default"><a href="#default" class="headerlink" title="default"></a>default</h4><p>validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy</p>
<h4 id="site"><a href="#site" class="headerlink" title="site"></a>site</h4><p>pre-site, site, post-site, site-deploy</p>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><pre><code>mvn package -Dmaven.skip.test=true 
    打war包
mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false
    创建项目
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;mvn [options] [&amp;lt;goal(s)&amp;gt;] [&amp;lt;phase(s)&amp;gt;]
options    
    
    </summary>
    
      <category term="Java" scheme="https://duansiman.github.io/categories/Java/"/>
    
    
      <category term="Maven" scheme="https://duansiman.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper</title>
    <link href="https://duansiman.github.io/2017/04/26/Zookeeper/"/>
    <id>https://duansiman.github.io/2017/04/26/Zookeeper/</id>
    <published>2017-04-26T06:49:57.000Z</published>
    <updated>2017-05-03T10:07:35.334Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置-conf-zoo-cfg"><a href="#配置-conf-zoo-cfg" class="headerlink" title="配置(conf/zoo.cfg)"></a>配置(conf/zoo.cfg)</h2><p>启动时会找zoo.cfg文件作为默认配置文件,所以复制一份zoo_sample.cfg</p>
<pre><code>tickTime：服务器之间或客户端与服务器之间维持心跳的时间间隔，每个 tickTime 时间就会发送一个心跳
dataDir ：保存数据的目录，将写数据的日志文件也保存在这个目录里
clientPort：监听这个端口，接受客户端的访问请求
</code></pre><p>启动命令</p>
<pre><code>./zkServer.sh start
</code></pre><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><pre><code>./zkCli.sh -server localhost:2181
</code></pre><h2 id="占用8080端口"><a href="#占用8080端口" class="headerlink" title="占用8080端口"></a>占用8080端口</h2><p>zookeeper有个内嵌的管理控制台是通过jetty启动，也会占用8080端口。可以启动脚本中修改</p>
<pre><code>admin.serverPort=port 
</code></pre><p>或者停止这服务</p>
<pre><code>admin.enableServer=false
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;配置-conf-zoo-cfg&quot;&gt;&lt;a href=&quot;#配置-conf-zoo-cfg&quot; class=&quot;headerlink&quot; title=&quot;配置(conf/zoo.cfg)&quot;&gt;&lt;/a&gt;配置(conf/zoo.cfg)&lt;/h2&gt;&lt;p&gt;启动时会找zoo.cfg文件作为
    
    </summary>
    
      <category term="Java" scheme="https://duansiman.github.io/categories/Java/"/>
    
      <category term="分布式" scheme="https://duansiman.github.io/categories/Java/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="Zookeeper" scheme="https://duansiman.github.io/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>Java RMI</title>
    <link href="https://duansiman.github.io/2017/04/26/Java-RMI/"/>
    <id>https://duansiman.github.io/2017/04/26/Java-RMI/</id>
    <published>2017-04-26T03:20:29.000Z</published>
    <updated>2017-04-26T03:24:49.840Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RMI是什么"><a href="#RMI是什么" class="headerlink" title="RMI是什么"></a>RMI是什么</h2><ul>
<li>RMI是一套足够优秀的socket框架.</li>
<li>RMI是相对比较简单命名服务</li>
<li>RMI是aop的经典实用例子</li>
<li>相关辅助功能，比如本地GC</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;RMI是什么&quot;&gt;&lt;a href=&quot;#RMI是什么&quot; class=&quot;headerlink&quot; title=&quot;RMI是什么&quot;&gt;&lt;/a&gt;RMI是什么&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;RMI是一套足够优秀的socket框架.&lt;/li&gt;
&lt;li&gt;RMI是相对比较简单命名服务&lt;/li
    
    </summary>
    
      <category term="Java" scheme="https://duansiman.github.io/categories/Java/"/>
    
      <category term="分布式" scheme="https://duansiman.github.io/categories/Java/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="RMI" scheme="https://duansiman.github.io/tags/RMI/"/>
    
  </entry>
  
  <entry>
    <title>tomcat</title>
    <link href="https://duansiman.github.io/2017/04/18/tomcat/"/>
    <id>https://duansiman.github.io/2017/04/18/tomcat/</id>
    <published>2017-04-18T07:35:52.000Z</published>
    <updated>2017-04-18T08:01:00.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启动多个"><a href="#启动多个" class="headerlink" title="启动多个"></a>启动多个</h2><h4 id="修改http端口（默认8080）"><a href="#修改http端口（默认8080）" class="headerlink" title="修改http端口（默认8080）"></a>修改http端口（默认8080）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;Connector port=<span class="string">"8080"</span> protocol=<span class="string">"HTTP/1.1"</span>  connectionTimeout=<span class="string">"60000"</span>  </div><div class="line">	redirectPort=<span class="string">"8443"</span> <span class="built_in">disable</span>UploadTimeout=<span class="string">"false"</span>  executor=<span class="string">"tomcatThreadPool"</span> URIEncoding=<span class="string">"UTF-8"</span>/&gt;</div></pre></td></tr></table></figure>
<h4 id="修改远程停服务端口（默认8005）"><a href="#修改远程停服务端口（默认8005）" class="headerlink" title="修改远程停服务端口（默认8005）"></a>修改远程停服务端口（默认8005）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;Server port=<span class="string">"8005"</span> shutdown=<span class="string">"SHUTDOWN"</span>&gt;</div></pre></td></tr></table></figure>
<h4 id="修改AJP端口（默认8009）"><a href="#修改AJP端口（默认8009）" class="headerlink" title="修改AJP端口（默认8009）"></a>修改AJP端口（默认8009）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;Connector port=<span class="string">"8009"</span> protocol=<span class="string">"AJP/1.3"</span> redirectPort=<span class="string">"8443"</span> /&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;启动多个&quot;&gt;&lt;a href=&quot;#启动多个&quot; class=&quot;headerlink&quot; title=&quot;启动多个&quot;&gt;&lt;/a&gt;启动多个&lt;/h2&gt;&lt;h4 id=&quot;修改http端口（默认8080）&quot;&gt;&lt;a href=&quot;#修改http端口（默认8080）&quot; class=&quot;head
    
    </summary>
    
      <category term="应用服务器" scheme="https://duansiman.github.io/categories/%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Tomcat" scheme="https://duansiman.github.io/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>nginx</title>
    <link href="https://duansiman.github.io/2017/04/18/nginx/"/>
    <id>https://duansiman.github.io/2017/04/18/nginx/</id>
    <published>2017-04-18T03:34:07.000Z</published>
    <updated>2017-04-21T10:25:07.089Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启动、停止和重新加载服务"><a href="#启动、停止和重新加载服务" class="headerlink" title="启动、停止和重新加载服务"></a>启动、停止和重新加载服务</h2><pre><code>nginx
nginx -s stop
nginx -s reload
nginx -s quit        退出
nginx -t             检查配置文件
</code></pre><h2 id="配置（-etc-nginx-nginx-conf、-etc-nginx-conf-d-default-conf）"><a href="#配置（-etc-nginx-nginx-conf、-etc-nginx-conf-d-default-conf）" class="headerlink" title="配置（/etc/nginx/nginx.conf、/etc/nginx/conf.d/default.conf）"></a>配置（/etc/nginx/nginx.conf、/etc/nginx/conf.d/default.conf）</h2><pre><code>worker_processes
    进程的个数，建议设置为CPU的个数
worker_connections
    单进程的最大连接数
server
    listen                监听端口
    server_name            服务的域名，可以配置多个用空格隔开
</code></pre><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>在http中配置</p>
<pre><code>#设定负载均衡的服务器列表  
upstream mysvr {  
    #weigth参数表示权值，权值越高被分配到的几率越大    
    #同一机器在多网情况下，路由切换，ip可能不同
    server 127.0.0.1:8080 weight=1;  
    server 127.0.0.1:8090 weight=1;  
    server 127.0.0.1:8070 weight=1;  
}
</code></pre><h2 id="代理、反向代理"><a href="#代理、反向代理" class="headerlink" title="代理、反向代理"></a>代理、反向代理</h2><h2 id="nginx-403-Forbidden"><a href="#nginx-403-Forbidden" class="headerlink" title="nginx 403 Forbidden"></a>nginx 403 Forbidden</h2><p>nginx的启动用户默认是nginx用户，需要修改web目录的权限</p>
<h2 id="静态文件缓存"><a href="#静态文件缓存" class="headerlink" title="静态文件缓存"></a>静态文件缓存</h2><p>server中配置缓存，需要指定root值，否则默认是Nginx的目录，会导致找不到文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#静态文件缓存时间设置</span></div><div class="line">   location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</div><div class="line">        root   /root/blog_front/blog-front/dist;</div><div class="line">        expires 30d;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="comment">#静态文件缓存时间设置</span></div><div class="line">   location ~ .*\.(js|css)?$ &#123;</div><div class="line">        root   /root/blog_front/blog-front/dist;</div><div class="line">        expires 1h;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;启动、停止和重新加载服务&quot;&gt;&lt;a href=&quot;#启动、停止和重新加载服务&quot; class=&quot;headerlink&quot; title=&quot;启动、停止和重新加载服务&quot;&gt;&lt;/a&gt;启动、停止和重新加载服务&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;nginx
nginx -s stop
ng
    
    </summary>
    
      <category term="应用服务器" scheme="https://duansiman.github.io/categories/%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="nginx" scheme="https://duansiman.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>插入算法</title>
    <link href="https://duansiman.github.io/2017/04/18/%E6%8F%92%E5%85%A5%E7%AE%97%E6%B3%95/"/>
    <id>https://duansiman.github.io/2017/04/18/插入算法/</id>
    <published>2017-04-18T02:19:19.000Z</published>
    <updated>2017-05-13T08:48:24.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>插入排序是使用了增量方法,在已经排序好的子数组A[1..j-1]中插入A[j],产生已经排序好的子数组A[1..j]</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span>[] datas = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</div><div class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; datas.length; i++) &#123;	<span class="comment">//次数-&gt;n-1</span></div><div class="line">           <span class="keyword">int</span> k = i;</div><div class="line">           <span class="keyword">int</span> value = datas[i];</div><div class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = i-<span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;		<span class="comment">//次数-&gt;最坏n-1,最好1</span></div><div class="line">               <span class="keyword">if</span> (datas[j] &gt; value) &#123;</div><div class="line">                   datas[k] = datas[j];</div><div class="line">                   k = j;</div><div class="line">               &#125;</div><div class="line">           &#125;</div><div class="line">           <span class="keyword">if</span> (k != i) &#123;</div><div class="line">               datas[k] = value;</div><div class="line">           &#125;</div><div class="line">       &#125;</div></pre></td></tr></table></figure>
<h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><p>外层循环n-1次,内层循环次数,也是元素的比较次数</p>
<pre><code>最好情况:数组A[n]是已经排序好的,那么元素比较次数是1
最坏情况数组A[n]是反序的,那么元素比较次数是n-1
</code></pre><p>所以最好情况是n,最坏情况是n^2</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;插入排序是使用了增量方法,在已经排序好的子数组A[1..j-1]中插入A[j],产生已经排序好的子数组A[1..j]&lt;/p&gt;
&lt;h2 id=
    
    </summary>
    
      <category term="数据结构和算法" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="插入算法" scheme="https://duansiman.github.io/tags/%E6%8F%92%E5%85%A5%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>单词词性</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%8D%95%E8%AF%8D%E8%AF%8D%E6%80%A7/"/>
    <id>https://duansiman.github.io/2017/04/18/单词词性/</id>
    <published>2017-04-18T02:19:19.000Z</published>
    <updated>2017-04-20T03:21:28.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="人称代词"><a href="#人称代词" class="headerlink" title="人称代词"></a>人称代词</h2><p>代词主格：做主语    </p>
<pre><code>I,You,He,She,It,We,You,They
</code></pre><p>代词宾格：动后介后</p>
<pre><code>me,you,him,her,it,us,you,them        
Tom loves him.
</code></pre><p>代词形容格:跟着名词    </p>
<pre><code>my,your,his,her,its,our,your,their    
her friend    她的朋友
</code></pre><p>代词名词格        </p>
<pre><code>mine,yours,his,hers,ours,yours,theirs    
The car is yours
</code></pre><p>名词格=形容格+名词    </p>
<pre><code>The book is mine. Yousr is here.这本书是我的，你的在这儿
</code></pre><p>反身代词：主语和表语指同一个人，宾语用反身代词</p>
<pre><code>myself,yourself,himself,herself,isself,ourselves,yourselves,themselves
</code></pre><h2 id="副词"><a href="#副词" class="headerlink" title="副词"></a>副词</h2><p>修饰形容词，直接放前面</p>
<pre><code>例如：very happy
</code></pre><p>修饰动词，放在反面</p>
<pre><code>例如：Tom misses his sister very much. Tom非常想念他的姐姐    very much 修饰 miss
</code></pre><p>修饰名词，放在后面</p>
<pre><code>例如：the kids there 哪里的小孩
</code></pre><h2 id="冠词"><a href="#冠词" class="headerlink" title="冠词"></a>冠词</h2><h4 id="the"><a href="#the" class="headerlink" title="the"></a>the</h4><p>可以和名词的单数、复数和不可数搭配，表达这个，这些</p>
<h4 id="a-an"><a href="#a-an" class="headerlink" title="a,an"></a>a,an</h4><p>元音字母a,e,i,o,u<br>挨着最近的词开头发元音 + an<br>an old man<br>an hour</p>
<h2 id="指示代词"><a href="#指示代词" class="headerlink" title="指示代词"></a>指示代词</h2><p>This is water 这些是水<br>That is water 那些是水<br>these are books<br>those are books</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;人称代词&quot;&gt;&lt;a href=&quot;#人称代词&quot; class=&quot;headerlink&quot; title=&quot;人称代词&quot;&gt;&lt;/a&gt;人称代词&lt;/h2&gt;&lt;p&gt;代词主格：做主语    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I,You,He,She,It,We,You,They
&lt;/code
    
    </summary>
    
      <category term="English" scheme="https://duansiman.github.io/categories/English/"/>
    
    
      <category term="单词词性" scheme="https://duansiman.github.io/tags/%E5%8D%95%E8%AF%8D%E8%AF%8D%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>归并排序</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    <id>https://duansiman.github.io/2017/04/18/归并排序/</id>
    <published>2017-04-18T02:19:19.000Z</published>
    <updated>2017-05-13T08:48:11.992Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h2><p>将问题分解为若干个规模小但类型原问题的子问题,递归地求解这些子问题,然后合并这些子问题的解来求原问题的解.<br>三个步骤<br>    分解:把问题分解成若干个规模小的子问题,这些子问题是原问题的规模小的实例<br>    解决:递归求解各个子问题,如果规模足够小,直接求解<br>    合并:根据子问题的解,求原问题解</p>
<h2 id="排序原理"><a href="#排序原理" class="headerlink" title="排序原理"></a>排序原理</h2><p>分解:把待排序N个元素的序列分解成两个N/2个元素的子序列<br>解决:递归地排序两个子序列,但子序列长度为1.递归返回<br>合并:把两个已排序的子序列,合并成一个已排序的序列</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> p, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (p &lt; r) &#123;</div><div class="line">    <span class="keyword">int</span> q = (p + r)/<span class="number">2</span>;</div><div class="line">    mergeSort(A, p, q);</div><div class="line">    mergeSort(A, q+<span class="number">1</span>, r);</div><div class="line">    merge(A, p, q, r);</div><div class="line">&#125;</div><div class="line"></div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> p, <span class="keyword">int</span> q, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">       <span class="keyword">int</span>[] lp = <span class="keyword">new</span> <span class="keyword">int</span>[q - p + <span class="number">1</span>];</div><div class="line">       <span class="keyword">int</span>[] lq = <span class="keyword">new</span> <span class="keyword">int</span>[r - q];</div><div class="line">       System.arraycopy(A, p, lp, <span class="number">0</span>, q - p + <span class="number">1</span>);</div><div class="line">       System.arraycopy(A, q+<span class="number">1</span>, lq, <span class="number">0</span>, r - q);</div><div class="line">       <span class="keyword">int</span> k = p, i, j;</div><div class="line">       <span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; lp.length &amp;&amp; j &lt; lq.length; k++) &#123;</div><div class="line">           <span class="keyword">if</span> (lp[i] &gt; lq[j]) &#123;</div><div class="line">               A[k] = lq[j];</div><div class="line">               j++;</div><div class="line">           &#125; <span class="keyword">else</span> &#123;</div><div class="line">               A[k] = lp[i];</div><div class="line">               i++;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="keyword">if</span> (i &lt; lp.length) &#123;</div><div class="line">           <span class="keyword">for</span> (;i&lt;lp.length;i++,k++) &#123;</div><div class="line">               A[k] = lp[i];</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="keyword">if</span> (j &lt; lq.length) &#123;</div><div class="line">           <span class="keyword">for</span> (;j&lt;lq.length;j++,k++) &#123;</div><div class="line">               A[k] = lq[j];</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><p>merge方法合并N/2长两个序列需要N长时间.当子序列长度为1,递归返回时,merge合并N/2对长度为1的子序列,即总时间N.<br>然而这递归过程可以建立一个二叉树,N个元素当做叶子节点.非叶子节点即是两个子节点序列合并而成. 所以这颗树的高度是logN,每一层合并的时间是N.因此归并排序时间复杂度是:NlogN</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;分治法&quot;&gt;&lt;a href=&quot;#分治法&quot; class=&quot;headerlink&quot; title=&quot;分治法&quot;&gt;&lt;/a&gt;分治法&lt;/h2&gt;&lt;p&gt;将问题分解为若干个规模小但类型原问题的子问题,递归地求解这些子问题,然后合并这些子问题的解来求原问题的解.&lt;br&gt;三个步骤&lt;br&gt; 
    
    </summary>
    
      <category term="数据结构和算法" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="归并排序" scheme="https://duansiman.github.io/tags/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>分治策略</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%88%86%E6%B2%BB%E7%AD%96%E7%95%A5/"/>
    <id>https://duansiman.github.io/2017/04/18/分治策略/</id>
    <published>2017-04-18T02:19:19.000Z</published>
    <updated>2017-05-13T08:48:22.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>有时候需要求解和原问题完全不一样的子问题,称为合并子问题步骤的一部分.</p>
<h2 id="最大子数组"><a href="#最大子数组" class="headerlink" title="最大子数组"></a>最大子数组</h2><p>一个序列A[n],按着分治思想把序列分成A[1,mid]和A[mid+1, n]序列.这时,最大子数组要么在A[1,mid]里面,要么在A[mid+1, n]里面,还有可能是跨中间A[i,mid,j]序列中</p>
<h2 id="递归伪代码"><a href="#递归伪代码" class="headerlink" title="递归伪代码"></a>递归伪代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Tuple <span class="title">findMax</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</div><div class="line">    Tuple&lt;Integer, Integer, Integer&gt; tuple = <span class="keyword">new</span> Tuple&lt;&gt;();</div><div class="line">    <span class="keyword">if</span> (low == high) &#123;</div><div class="line">        tuple.left = low;</div><div class="line">        tuple.right = high;</div><div class="line">        tuple.sum = A[low];</div><div class="line">        <span class="keyword">return</span> tuple;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">int</span> mid = (low + high)/<span class="number">2</span>;</div><div class="line">        Tuple&lt;Integer, Integer, Integer&gt; lTuple = findMax(A, low, mid);</div><div class="line">        Tuple&lt;Integer, Integer, Integer&gt; cTuple = findCrossMax(A, low, mid, high);</div><div class="line">        Tuple&lt;Integer, Integer, Integer&gt; rTuple = findMax(A, mid + <span class="number">1</span>, high);</div><div class="line">        <span class="keyword">if</span> (lTuple.sum &gt; cTuple.sum &amp;&amp; lTuple.sum &gt; rTuple.sum) &#123;</div><div class="line">            <span class="keyword">return</span> lTuple;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rTuple.sum &gt; cTuple.sum &amp;&amp; rTuple.sum &gt; lTuple.sum) &#123;</div><div class="line">            <span class="keyword">return</span> rTuple;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> cTuple;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Tuple <span class="title">findCrossMax</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> low, <span class="keyword">int</span> mid, <span class="keyword">int</span> high)</span></span>&#123;</div><div class="line">    Tuple&lt;Integer, Integer, Integer&gt; tuple = <span class="keyword">new</span> Tuple&lt;&gt;();</div><div class="line">    <span class="keyword">int</span> lSum = Integer.MIN_VALUE;</div><div class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> l = -<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = mid; i &gt;= low; i--) &#123;</div><div class="line">        temp += A[i];</div><div class="line">        <span class="keyword">if</span> (temp &gt; lSum) &#123;</div><div class="line">            lSum = temp;</div><div class="line">            l = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> rSum = Integer.MIN_VALUE;</div><div class="line">    <span class="keyword">int</span> r = -<span class="number">1</span>;</div><div class="line">    temp = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = mid; i &lt;= high; i++) &#123;</div><div class="line">        temp += A[i];</div><div class="line">        <span class="keyword">if</span> (temp &gt; rSum) &#123;</div><div class="line">            rSum = temp;</div><div class="line">            r= i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    tuple.left=l;</div><div class="line">    tuple.right=r;</div><div class="line">    tuple.sum = lSum + rSum - A[mid];</div><div class="line">    <span class="keyword">return</span> tuple;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="线性时间求解"><a href="#线性时间求解" class="headerlink" title="线性时间求解"></a>线性时间求解</h2><p>若已知A[1…j]的最大子数组，A[1…j+1]的最大子数组要么是A[1…j]的最大子数组，要么是某个子数组A<a href="1&lt;=i&lt;=j+1">i…j+1</a>.在已知A[1…j]的最大子数组的情况下，可以在线性时间内找出形如A[i..j+1]的最大子数组</p>
<h2 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Tuple <span class="title">findMaxOfLine</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</div><div class="line">    Tuple&lt;Integer, Integer, Integer&gt; tuple = <span class="keyword">new</span> Tuple&lt;&gt;();</div><div class="line">    <span class="keyword">int</span> sum = A[low];</div><div class="line">    <span class="keyword">int</span> eSum = A[low];</div><div class="line">    <span class="keyword">int</span> l=low;</div><div class="line">    <span class="keyword">int</span> r=low;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = low+<span class="number">1</span>; i &lt;= high; i++) &#123;</div><div class="line">        eSum += A[i];</div><div class="line">        <span class="keyword">if</span> (eSum &gt; sum) &#123;<span class="comment">//判断A[1...j]是否为最大子数组</span></div><div class="line">            r=i;</div><div class="line">            sum=eSum;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> temp = eSum;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = l; j &lt; i; j++) &#123; <span class="comment">//判断A[i...j+1]是否为最大子数组</span></div><div class="line">            temp -= A[j];</div><div class="line">            <span class="keyword">if</span> (temp &gt; sum) &#123;</div><div class="line">                l=j+<span class="number">1</span>;</div><div class="line">                r=i;</div><div class="line">                sum=temp;</div><div class="line">                eSum = temp;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    tuple.left=l;</div><div class="line">    tuple.right=r;</div><div class="line">    tuple.sum=sum;</div><div class="line">    <span class="keyword">return</span> tuple;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="伪代码2"><a href="#伪代码2" class="headerlink" title="伪代码2"></a>伪代码2</h2><p>如果一个数组A[k..j]求和得到负值，那么数组A[k..j+1]的最大子数组肯定不会是A[k..j+1]，因为A[k..j]+A[j+1]<a[j+1] <figure="" class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Tuple <span class="title">findMaxOfLine2</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> tempSum=<span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> sum=Integer.MIN_VALUE;</div><div class="line">    Tuple&lt;Integer, Integer, Integer&gt; tuple = <span class="keyword">new</span> Tuple&lt;&gt;();</div><div class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)&#123;</div><div class="line">        tempSum+=A[i];</div><div class="line">        <span class="keyword">if</span>(tempSum &gt; sum) &#123;</div><div class="line">            sum=tempSum;</div><div class="line">            tuple.left = k;</div><div class="line">            tuple.right=i;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(tempSum &lt; <span class="number">0</span>) &#123;</div><div class="line">            tempSum=<span class="number">0</span>;</div><div class="line">            k=i+<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    tuple.sum = sum;</div><div class="line">    <span class="keyword">return</span> tuple;</div><div class="line">&#125;</div></pre></td></tr></table></a[j+1]></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;有时候需要求解和原问题完全不一样的子问题,称为合并子问题步骤的一部分.&lt;/p&gt;
&lt;h2 id=&quot;最大子数组&quot;&gt;&lt;a href=&quot;#最大子数组
    
    </summary>
    
      <category term="数据结构和算法" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="分治策略" scheme="https://duansiman.github.io/tags/%E5%88%86%E6%B2%BB%E7%AD%96%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>句子成分</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%8F%A5%E5%AD%90%E6%88%90%E5%88%86/"/>
    <id>https://duansiman.github.io/2017/04/18/句子成分/</id>
    <published>2017-04-18T02:16:57.000Z</published>
    <updated>2017-04-20T03:21:28.118Z</updated>
    
    <content type="html"><![CDATA[<h2 id="词性担当"><a href="#词性担当" class="headerlink" title="词性担当"></a>词性担当</h2><p>主语——名、代（主格）<br>谓语——动词<br>表语——名、代、形、副(少量)、介宾<br>宾语——名、代（宾格）</p>
<h2 id="定语"><a href="#定语" class="headerlink" title="定语"></a>定语</h2><p>修饰名词，对名词进行限定的语言</p>
<h4 id="形容词做定语：形容-名"><a href="#形容词做定语：形容-名" class="headerlink" title="形容词做定语：形容+名"></a>形容词做定语：形容+名</h4><p>a clean room</p>
<h4 id="介宾做定语：名-介宾"><a href="#介宾做定语：名-介宾" class="headerlink" title="介宾做定语：名+介宾"></a>介宾做定语：名+介宾</h4><p>the box on the table 桌子上的盒子</p>
<h4 id="部分副词做定语：名-副词"><a href="#部分副词做定语：名-副词" class="headerlink" title="部分副词做定语：名+副词"></a>部分副词做定语：名+副词</h4><p>children there 哪里的小孩</p>
<h2 id="状语"><a href="#状语" class="headerlink" title="状语"></a>状语</h2><p>修饰动词，介宾、副词担当，放在句首、句尾和句中都可以</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;词性担当&quot;&gt;&lt;a href=&quot;#词性担当&quot; class=&quot;headerlink&quot; title=&quot;词性担当&quot;&gt;&lt;/a&gt;词性担当&lt;/h2&gt;&lt;p&gt;主语——名、代（主格）&lt;br&gt;谓语——动词&lt;br&gt;表语——名、代、形、副(少量)、介宾&lt;br&gt;宾语——名、代（宾格）&lt;/p&gt;
    
    </summary>
    
      <category term="English" scheme="https://duansiman.github.io/categories/English/"/>
    
    
      <category term="句子成分" scheme="https://duansiman.github.io/tags/%E5%8F%A5%E5%AD%90%E6%88%90%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>句子结构</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%8F%A5%E5%AD%90%E7%BB%93%E6%9E%84/"/>
    <id>https://duansiman.github.io/2017/04/18/句子结构/</id>
    <published>2017-04-18T02:12:19.000Z</published>
    <updated>2017-04-20T03:23:21.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主系表"><a href="#主系表" class="headerlink" title="主系表"></a>主系表</h2><pre><code>主语+be+表语
</code></pre><p>肯定句:He is in the car.<br>否定句:He is not in the car.<br>一般疑问句:Is he in the car?    Yes,he is. No,he isn’t.</p>
<p>谁在车里？<br>特殊疑问句——提问主语:Who is in the car?</p>
<pre><code>疑问词+is,am,are+主语？
</code></pre><p>他在哪儿？<br>特殊疑问句——提问非主语:Where is he?</p>
<h4 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h4><p>I am         -&gt; I’m<br>He is         -&gt; He’s<br>It is         -&gt; It’s<br>They are    -&gt; They’re<br>I am not    -&gt; I’m not<br>is not        -&gt; isn’t<br>are not        -&gt; aren’t</p>
<h2 id="主谓（宾）"><a href="#主谓（宾）" class="headerlink" title="主谓（宾）"></a>主谓（宾）</h2><pre><code>主语+非be+(宾语)+状语
</code></pre><h4 id="非三单-动原"><a href="#非三单-动原" class="headerlink" title="非三单+动原+"></a>非三单+动原+</h4><p>否定句：非三单+do not+动原+<br>一般疑问句:Do+非三单+动原+<br>特殊疑问句——提问主语：语序不变<br>特殊疑问句——提问非主语：特助主谓，特殊疑问词+主动词do+非三单+动原+</p>
<h4 id="三单-动s"><a href="#三单-动s" class="headerlink" title="三单+动s+"></a>三单+动s+</h4><p>否定句:三单+does not+动原+<br>一般疑问句:Does+三单+动原+<br>特殊疑问句——提问主语：语序不变<br>特殊疑问句——提问非主语：特助主谓，特殊疑问词+主动词does+三单+动原+</p>
<h4 id="三单"><a href="#三单" class="headerlink" title="三单"></a>三单</h4><p>人称代词：第三人称 -&gt; he、she、it<br>指示代词：this、this book、that、that dog<br>名词:单数，不可数名词</p>
<h4 id="非三单"><a href="#非三单" class="headerlink" title="非三单"></a>非三单</h4><p>人称代词:I you we they<br>指示代词:these、those<br>名词:复数</p>
<p>肯定句:They learn English every day.</p>
<p>他们每天不学英语。<br>否定句:They don’t learn English every day.</p>
<p>他们每天学英语吗？<br>一般疑问句:Do they learn English every day?</p>
<p>谁每天学英语？<br>特殊疑问句——提问主语:Who learn English every day?</p>
<p>他们每天学什么？<br>特殊疑问句——提问非主语:What do they learn every day?</p>
<h2 id="There-be-结构"><a href="#There-be-结构" class="headerlink" title="There be 结构"></a>There be 结构</h2><pre><code>(There + is/are)(存在) + 名词 + (地点)
</code></pre><p>There 不是主语，只是占主语位置。所以is/are由后面名词决定。<br>表达存在，而have表示拥有，例如：我有三辆车 I have three cars.</p>
<h4 id="就近原则"><a href="#就近原则" class="headerlink" title="就近原则"></a>就近原则</h4><p>There is a cat and two dogs under the tree.<br>There are two dogs and a cat under the tree.</p>
<p>肯定句:There are many students in the classroom<br>否定句:There are not many students in the classroom(some 在否定句中变成 any)<br>一般疑问句:Are there many students in the classroom?</p>
<p>教室里有多少同学？<br>特殊疑问句:How many students are there in the classroom?<br>How much + 不可数名词+is there + 地点<br>How many + 可数名词 + are there + 地点</p>
<h2 id="中译英"><a href="#中译英" class="headerlink" title="中译英"></a>中译英</h2><h4 id="找主谓——定结构"><a href="#找主谓——定结构" class="headerlink" title="找主谓——定结构"></a>找主谓——定结构</h4><pre><code>主谓（宾）
主系表
there be
</code></pre><h4 id="中-中’-英——定语序"><a href="#中-中’-英——定语序" class="headerlink" title="中-中’-英——定语序"></a>中-中’-英——定语序</h4><pre><code>方式、地点、时间
从小到大
句首状语
</code></pre><p>每天6点他在家写作业吗？<br>Dose he do his homework at home at six every day ?</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;主系表&quot;&gt;&lt;a href=&quot;#主系表&quot; class=&quot;headerlink&quot; title=&quot;主系表&quot;&gt;&lt;/a&gt;主系表&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;主语+be+表语
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;肯定句:He is in the car.&lt;br&gt;否定句:He i
    
    </summary>
    
      <category term="English" scheme="https://duansiman.github.io/categories/English/"/>
    
    
      <category term="句子结构" scheme="https://duansiman.github.io/tags/%E5%8F%A5%E5%AD%90%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识点</title>
    <link href="https://duansiman.github.io/2017/04/17/MySQL-%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://duansiman.github.io/2017/04/17/MySQL-知识点/</id>
    <published>2017-04-17T10:40:55.000Z</published>
    <updated>2017-04-17T10:49:41.410Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置文件在/etc/mysql/my.cnf,一些配置内容如下：</p>
<pre><code>max_connections        
    最大支持连接数，设置到500～1000比较合适
wait-timeout        
    数据库连接闲置最大时间值，默认值为8小时 
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;配置文件在/etc/mysql/my.cnf,一些配置内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;max_connections       
    
    </summary>
    
      <category term="数据库" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL知识点" scheme="https://duansiman.github.io/tags/MySQL%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>Linux 常用命令</title>
    <link href="https://duansiman.github.io/2017/04/17/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://duansiman.github.io/2017/04/17/Linux-常用命令/</id>
    <published>2017-04-17T03:07:22.000Z</published>
    <updated>2017-04-26T07:25:33.221Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><pre><code>x, X       x 为向后删除一个字符, X为向前删除一个字符
nx         连续向后删除 n 个字符
dd         删除游标所在这行
ndd        删除游标所在向下n行
d1G        删除光标所在到第一行的所有数据
dG         删除光标所在到最后一行的所有数据
d$         删除游标所在处，到该行的最后一个字符
d0         删除游标所在处，到该行的最前面一个字符
</code></pre><h4 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h4><pre><code>y1G        复制光标所在行到第一行的所有数据
yG        复制光标所在行到最后一行的所有数据
y0        复制光标所在的那个字符到该行行首的所有数据
y$        复制光标所在的那个字符到该行行尾的所有数据
</code></pre><h4 id="粘贴"><a href="#粘贴" class="headerlink" title="粘贴"></a>粘贴</h4><pre><code>p,P        p粘贴到光标所在行的下一行,P所在行的上一行
</code></pre><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><pre><code>u        复原上一个动作
</code></pre><h4 id="重复执行"><a href="#重复执行" class="headerlink" title="重复执行"></a>重复执行</h4><pre><code>ctrl+r    再执行一次上一个动作；也可以按小数点&apos;.&apos; 一样的效果
</code></pre><h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h4><pre><code>r,R     r 会取代光标所在的那一个字符； R 会一直取代光标所在的文字，直到按下 ESC 为止
</code></pre><h4 id="执行其他命令"><a href="#执行其他命令" class="headerlink" title="执行其他命令"></a>执行其他命令</h4><pre><code>:! command        离开 vi 到指令列模式下执行 command 的显示结果
</code></pre><h4 id="行数"><a href="#行数" class="headerlink" title="行数"></a>行数</h4><pre><code>:set nu, :set nonu         显示行数和取消行数
</code></pre><h4 id="翻页，移动光标"><a href="#翻页，移动光标" class="headerlink" title="翻页，移动光标"></a>翻页，移动光标</h4><pre><code>ctrl +f, +b, +d, +u             向后，前翻一页，向后，前翻半页
h, j, k, l                      左，下，上，右
+, -                            移动下一行，上一行的非空格符号
n&lt;space&gt;， n&lt;enter&gt;             向右移动n 个字符, 向下移动n行
0, $                            移动行首,行尾
H, M, L                         移动到屏幕的第一行，最后一行，中间行。
G, nG, gg                       移动文档最后一行,第n行，第一行
</code></pre><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><pre><code>n， N                    向后，前继续搜索
</code></pre><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><pre><code>-R, -r, --recursive   递归复制
-p                    连同档案的属性一起复制过去，而非使用预设属性
</code></pre><h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><pre><code>PID：进程的ID
USER：进程所有者
PR：进程的优先级别，越小越优先被执行
NInice：值
VIRT：进程占用的虚拟内存
RES：进程占用的物理内存
SHR：进程使用的共享内存
S：进程的状态。S表示休眠，R表示正在运行，Z表示僵死状态，N表示该进程优先值为负数
%CPU：进程占用CPU的使用率
%MEM：进程使用的物理内存和总内存的百分比
TIME+：该进程启动后占用的总的CPU时间，即占用CPU使用时间的累加值。
COMMAND：进程启动命令名称
</code></pre><h4 id="第一行"><a href="#第一行" class="headerlink" title="第一行"></a>第一行</h4><pre><code>系统当前时刻、系统启动到现在的运作时间、终端的数目、当前系统负载的平均值，1分钟前、5分钟前、15分钟前进程的平均数
</code></pre><h4 id="第二行"><a href="#第二行" class="headerlink" title="第二行"></a>第二行</h4><pre><code>进程总数、运行中的进程数、等待状态中的进程数、被停止的系统进程数、被复原的进程数
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;vim&quot;&gt;&lt;a href=&quot;#vim&quot; class=&quot;headerlink&quot; title=&quot;vim&quot;&gt;&lt;/a&gt;vim&lt;/h2&gt;&lt;h4 id=&quot;删除&quot;&gt;&lt;a href=&quot;#删除&quot; class=&quot;headerlink&quot; title=&quot;删除&quot;&gt;&lt;/a&gt;删除&lt;/h4&gt;&lt;p
    
    </summary>
    
      <category term="Linux" scheme="https://duansiman.github.io/categories/Linux/"/>
    
    
      <category term="Linux常用命令" scheme="https://duansiman.github.io/tags/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Linux 知识点</title>
    <link href="https://duansiman.github.io/2017/04/17/Linux-%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://duansiman.github.io/2017/04/17/Linux-知识点/</id>
    <published>2017-04-17T02:47:21.000Z</published>
    <updated>2017-05-13T08:40:38.569Z</updated>
    
    <content type="html"><![CDATA[<h2 id="源列表"><a href="#源列表" class="headerlink" title="源列表"></a>源列表</h2><p>Linux存放源有两个地方：/etc/apt/sources.list和/etc/apt/sources.list.d/*.list，后一个通常用来安装第三方的软件<br>sources.list文件内容：</p>
<pre><code>开头是deb或者deb-src，通过.deb文件进行安装和通过源文件的方式进行安装。
URL后面的字符串，分别对应相应的目录结构。进入dists目录，就看到URL后目录结构
</code></pre><h2 id="查看端口占用"><a href="#查看端口占用" class="headerlink" title="查看端口占用"></a>查看端口占用</h2><pre><code>lsof -i:端口号                            
    查看占用该端口的进程
netstat -ntlup | grep 端口号                  
    根据端口搜索进程
ps -ef | grep 进程号                        
    查看进程
netstat –apn                            
    查看所有的进程和端口使用情况
kill -9 processId                        
    杀进程
</code></pre><h2 id="物理CPU、逻辑CPU和CPU核数"><a href="#物理CPU、逻辑CPU和CPU核数" class="headerlink" title="物理CPU、逻辑CPU和CPU核数"></a>物理CPU、逻辑CPU和CPU核数</h2><h4 id="物理CPU"><a href="#物理CPU" class="headerlink" title="物理CPU"></a>物理CPU</h4><p>插槽上的CPU个数,物理cpu数量，可以数不重复的 physical id 有几个。</p>
<h4 id="逻辑CPU"><a href="#逻辑CPU" class="headerlink" title="逻辑CPU"></a>逻辑CPU</h4><p>/proc/cpuinfo 文件,用来存储cpu硬件信息的.列出了processor 0 – n 的规格,n不是真实的cpu数<br>一颗cpu可以有多核，加上intel的超线程技术(HT), 可以在逻辑上再分一倍数量的cpu core<br>逻辑CPU数量=物理cpu数量 x cpu cores 这个规格值 x 2(如果支持并开启ht)</p>
<pre><code>Linux下top查看的CPU也是逻辑CPU个数
</code></pre><h4 id="查看物理CPU的个数"><a href="#查看物理CPU的个数" class="headerlink" title="查看物理CPU的个数"></a>查看物理CPU的个数</h4><pre><code>cat /proc/cpuinfo |grep &quot;physical id&quot;|sort |uniq|wc -l
</code></pre><h4 id="查看逻辑CPU的个数"><a href="#查看逻辑CPU的个数" class="headerlink" title="查看逻辑CPU的个数"></a>查看逻辑CPU的个数</h4><pre><code>cat /proc/cpuinfo |grep &quot;processor&quot;|wc -l
</code></pre><h4 id="查看CPU是几核"><a href="#查看CPU是几核" class="headerlink" title="查看CPU是几核"></a>查看CPU是几核</h4><pre><code>cat /proc/cpuinfo |grep &quot;cores&quot;|uniq
</code></pre><h2 id="查看内存、CPU使用情况"><a href="#查看内存、CPU使用情况" class="headerlink" title="查看内存、CPU使用情况"></a>查看内存、CPU使用情况</h2><p>可用内存=系统free memory+buffers+cached</p>
<pre><code>top                     查看内存和CPU    
pmap -d processId        查看进程相关信息占用的内存情况
free -m                 查看内存
cat /proc/meminfo        查看内存额定值
ll -h /proc/kcore        查看内存镜像文件的大小
</code></pre><h2 id="无法解析或打开软件包的列表或是状态文件解决方案"><a href="#无法解析或打开软件包的列表或是状态文件解决方案" class="headerlink" title="无法解析或打开软件包的列表或是状态文件解决方案"></a>无法解析或打开软件包的列表或是状态文件解决方案</h2><pre><code>E: Encountered a section with no Package: header
E: Problem with MergeList /var/lib/apt/lists/cn.archive.ubuntu.com_ubuntu_dists_
natty_main_i18n_Translation-en
</code></pre><p>sudo rm /var/lib/apt/lists/* -vf</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;源列表&quot;&gt;&lt;a href=&quot;#源列表&quot; class=&quot;headerlink&quot; title=&quot;源列表&quot;&gt;&lt;/a&gt;源列表&lt;/h2&gt;&lt;p&gt;Linux存放源有两个地方：/etc/apt/sources.list和/etc/apt/sources.list.d/*.list
    
    </summary>
    
      <category term="Linux" scheme="https://duansiman.github.io/categories/Linux/"/>
    
    
      <category term="Linux知识点" scheme="https://duansiman.github.io/tags/Linux%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>加密、解密</title>
    <link href="https://duansiman.github.io/2017/04/14/%E5%8A%A0%E5%AF%86%E3%80%81%E8%A7%A3%E5%AF%86/"/>
    <id>https://duansiman.github.io/2017/04/14/加密、解密/</id>
    <published>2017-04-14T09:00:53.000Z</published>
    <updated>2017-04-17T10:51:44.232Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h2><p>　　Base64编码要求把3个8位字节（3<em>8=24）转化为4个6位的字节（4</em>6=24），之后在6位的前面补两个0，形成8位一个字节的形式。 如果剩下的字符不足3个字节，则用0填充，输出字符使用‘=’，因此编码后输出的文本末尾可能会出现‘=’。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Base64&quot;&gt;&lt;a href=&quot;#Base64&quot; class=&quot;headerlink&quot; title=&quot;Base64&quot;&gt;&lt;/a&gt;Base64&lt;/h2&gt;&lt;p&gt;　　Base64编码要求把3个8位字节（3&lt;em&gt;8=24）转化为4个6位的字节（4&lt;/em&gt;6=24），之
    
    </summary>
    
      <category term="计算机" scheme="https://duansiman.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="编码" scheme="https://duansiman.github.io/tags/%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的配置</title>
    <link href="https://duansiman.github.io/2017/04/12/Hexo%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>https://duansiman.github.io/2017/04/12/Hexo的配置/</id>
    <published>2017-04-12T02:20:34.000Z</published>
    <updated>2017-04-17T11:01:02.339Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h2><p>　<a href="https://hexo.io/themes/" target="_blank" rel="external">官方主题网站</a>，在主题下载放到themes目录。然后修改_config.yml配置文件<br>　<img src="/2017/04/12/Hexo的配置/1.jpg" alt=""></p>
<h2 id="评论插件"><a href="#评论插件" class="headerlink" title="评论插件"></a>评论插件</h2><p>　使用的是<a href="https://github.com/giscafer/hexo-theme-cafe" target="_blank" rel="external">Cafe</a>主题，由于<a href="http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241" target="_blank" rel="external">多说</a>项目关闭，所以使用时国外<a href="https://disqus.com/" target="_blank" rel="external">Disqus</a>评论。<br><br>　Cafe的_config.yml配置文件有说明，在博客的_config.yml文件配置disqus的账号就可以<br>　<img src="/2017/04/12/Hexo的配置/2.jpg" alt=""></p>
<h4 id="注册Disqus账号"><a href="#注册Disqus账号" class="headerlink" title="注册Disqus账号"></a>注册Disqus账号</h4><p>　在admin里，setting里的shortname名字才是配置到_config.yml文件中的<br>　<img src="/2017/04/12/Hexo的配置/3.jpg" alt=""></p>
<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>　配置像这个分层次的分类<br>　<img src="/2017/04/12/Hexo的配置/4.jpg" alt=""><br>　<img src="/2017/04/12/Hexo的配置/5.jpg" alt=""></p>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>使用markdown的#标题时，#和标题要隔个空格，否则解析不了。</p>
<h2 id="云标签"><a href="#云标签" class="headerlink" title="云标签"></a>云标签</h2><p>　把Cafe的tagcloud_color设置为true<br>　<img src="/2017/04/12/Hexo的配置/6.jpg" alt=""></p>
<h2 id="配置关于界面"><a href="#配置关于界面" class="headerlink" title="配置关于界面"></a>配置关于界面</h2><p>　使用hexo new page “about”创建about的页面，在_config.yml中可以修改about名称<br>　<img src="/2017/04/12/Hexo的配置/7.jpg" alt=""></p>
<h2 id="文章中插入图片"><a href="#文章中插入图片" class="headerlink" title="文章中插入图片"></a>文章中插入图片</h2><p>　在博客的_config.yml文件设置post_asset_folder为true。在建立文件时，Hexo会自动建立一个与文章同名的文件夹，用来放资源的。<br>然后安装<a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="external">hexo-asset-image</a>插件npm install hexo-asset-image –save。通过下面方法就可以在文章插入图片。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![logo](本地图片测试/logo.jpg) 其中[]里面不写文字则没有图片标题。</div><div class="line">而&#123;% asset_img example.jpg this is an example image %&#125; 生成HTML文件图片路径错误</div></pre></td></tr></table></figure></p>
<h2 id="RSS订阅"><a href="#RSS订阅" class="headerlink" title="RSS订阅"></a>RSS订阅</h2><p>执行命令安装插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure></p>
<p>在博客的_config.yml文件配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># RSS订阅支持</span></div><div class="line">plugin:</div><div class="line">- hexo-generator-feed</div><div class="line"></div><div class="line"><span class="comment"># Feed Atom</span></div><div class="line">feed:</div><div class="line"><span class="built_in">type</span>: atom</div><div class="line">path: atom.xml</div><div class="line"><span class="built_in">limit</span>: 20</div></pre></td></tr></table></figure></p>
<h2 id="Google-Analytics"><a href="#Google-Analytics" class="headerlink" title="Google Analytics"></a>Google Analytics</h2><p>　在主题的_config.yml文件配置如下,id是Google Analytics生成的追踪id,需要去Google Analytics官网创建。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">google_analytics:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  id: UA-97173941-1</div><div class="line">  site: auto</div></pre></td></tr></table></figure></p>
<h2 id="提交搜索引擎（百度-谷歌）"><a href="#提交搜索引擎（百度-谷歌）" class="headerlink" title="提交搜索引擎（百度+谷歌）"></a>提交搜索引擎（百度+谷歌）</h2><p>　<a href="http://www.jianshu.com/p/619dab2d3c08" target="_blank" rel="external">参考博客</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;设置主题&quot;&gt;&lt;a href=&quot;#设置主题&quot; class=&quot;headerlink&quot; title=&quot;设置主题&quot;&gt;&lt;/a&gt;设置主题&lt;/h2&gt;&lt;p&gt;　&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;extern
    
    </summary>
    
      <category term="Blog" scheme="https://duansiman.github.io/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="https://duansiman.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Git常遇到问题场景</title>
    <link href="https://duansiman.github.io/2017/04/11/Git%E5%B8%B8%E9%81%87%E5%88%B0%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    <id>https://duansiman.github.io/2017/04/11/Git常遇到使用场景/</id>
    <published>2017-04-11T10:52:59.000Z</published>
    <updated>2017-05-05T09:26:00.558Z</updated>
    
    <content type="html"><![CDATA[<h2 id="删除仓库中目录或文件"><a href="#删除仓库中目录或文件" class="headerlink" title="删除仓库中目录或文件"></a>删除仓库中目录或文件</h2><p>　git rm -r 目录 或者 git rm 文件<br>　git commit -m “” 提交<br>　误删可以恢复<br>　git checkout – 文件</p>
<h2 id="忽略特殊文件"><a href="#忽略特殊文件" class="headerlink" title="忽略特殊文件"></a>忽略特殊文件</h2><p>　在git工作区间根目录创建.gitignore文件，然后把要忽略的文件添加进去。<br>　Window环境创建该文件会提示输入文件名，但是在文本编辑器里“保存”或者“另存为”就可以把文件保存为.gitignore 然后把该文件提交到git<br>　A、被忽略的文件，要强制添加到git<br>　　　git add -f 文件<br>　B、查看忽略文件被个规则忽略了<br>　　　git check-ignore -v 文件<br>　常见的忽略文件：<a href="https://github.com/github/gitignore" target="_blank" rel="external">https://github.com/github/gitignore</a></p>
<h2 id="撤销文件修改"><a href="#撤销文件修改" class="headerlink" title="撤销文件修改"></a>撤销文件修改</h2><p>　A、已经git add到暂存区，如图：<br>　<img src="/2017/04/11/Git常遇到使用场景/1.png" alt=""><br>　<img src="/2017/04/11/Git常遇到使用场景/2.png" alt=""><br>　git reset HEAD file 可把暂存区的修改销掉，重新放回工作区<br>　git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。<br><br><br>　B、还没git add到暂存区，如图：<br>　<img src="/2017/04/11/Git常遇到使用场景/3.png" alt=""><br>　git checkout – 文件 丢弃工作区的修改<br>　命令“git checkout – 文件”是：把readme.txt文件在工作区的修改全部撤销，这里有两种情况：<br>　一种是readme.txt自修改后还没有被放到暂存区，撤销修改就回到和版本库一模一样的状态；<br>　一种是readme.txt已经添加到暂存区后，又作了修改，撤销修改就回到添加到暂存区后的状态。</p>
<h2 id="删除仓库中文件，本地文件保留"><a href="#删除仓库中文件，本地文件保留" class="headerlink" title="删除仓库中文件，本地文件保留"></a>删除仓库中文件，本地文件保留</h2><p>　git rm –cached filename<br>　git rm -r –cached path</p>
<h2 id="让git-push命令不需要密码"><a href="#让git-push命令不需要密码" class="headerlink" title="让git push命令不需要密码"></a>让git push命令不需要密码</h2><p>　GitHub获得远程库时，有ssh方式和https方式。使用ssh时保存密钥对以后可以不再输入帐号密码，而https却不能。已经存在的项目修改.git目录下的config文件中的url。</p>
<h2 id="中文显示问题"><a href="#中文显示问题" class="headerlink" title="中文显示问题"></a>中文显示问题</h2><p>git config –global core.quotepath false</p>
<h2 id="还原文件内容"><a href="#还原文件内容" class="headerlink" title="还原文件内容"></a>还原文件内容</h2><p>使用git checkout file 还原本地修改。如果文件没有add到缓存区，使用IDE的Local History记录，来恢复原来被还原文件的修改内容。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;删除仓库中目录或文件&quot;&gt;&lt;a href=&quot;#删除仓库中目录或文件&quot; class=&quot;headerlink&quot; title=&quot;删除仓库中目录或文件&quot;&gt;&lt;/a&gt;删除仓库中目录或文件&lt;/h2&gt;&lt;p&gt;　git rm -r 目录 或者 git rm 文件&lt;br&gt;　git com
    
    </summary>
    
      <category term="Git" scheme="https://duansiman.github.io/categories/Git/"/>
    
    
      <category term="Git问题场景" scheme="https://duansiman.github.io/tags/Git%E9%97%AE%E9%A2%98%E5%9C%BA%E6%99%AF/"/>
    
  </entry>
  
</feed>
