<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安逸的小猫</title>
  <subtitle>苟有恒，何必三更眠、五更起；最无益，莫过一日曝、十日寒。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://duansiman.github.io/"/>
  <updated>2017-05-27T09:48:02.243Z</updated>
  <id>https://duansiman.github.io/</id>
  
  <author>
    <name>Devin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>单元测试</title>
    <link href="https://duansiman.github.io/2017/05/18/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    <id>https://duansiman.github.io/2017/05/18/单元测试/</id>
    <published>2017-05-18T03:24:53.000Z</published>
    <updated>2017-05-27T09:48:02.243Z</updated>
    
    <content type="html"><![CDATA[<p>软件测试分为单元测试、集成测试、功能测试、系统测试。</p>
<h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><p>测试某个功能正确性，通常情况一个功能模块会关联多个其他功能模块，这时模拟对象就有用，可以模拟其他模块特定操作行为</p>
<h4 id="被测系统（SUT）"><a href="#被测系统（SUT）" class="headerlink" title="被测系统（SUT）"></a>被测系统（SUT）</h4><h4 id="测试替身（Test-Double）"><a href="#测试替身（Test-Double）" class="headerlink" title="测试替身（Test Double）"></a>测试替身（Test Double）</h4><p>减少对被测对象的依赖</p>
<h5 id="Dummy-Objects"><a href="#Dummy-Objects" class="headerlink" title="Dummy Objects"></a>Dummy Objects</h5><pre><code>测试中必须传入的对象，传入这些对象并不会生产如何作用
</code></pre><h5 id="Test-Stub"><a href="#Test-Stub" class="headerlink" title="Test Stub"></a>Test Stub</h5><pre><code>测试桩接受SUT内部的间接输入，可以按照我们的要求返回特定的内容给SUT
</code></pre><h5 id="Test-Spy"><a href="#Test-Spy" class="headerlink" title="Test Spy"></a>Test Spy</h5><pre><code>将SUT内部的间接输出传到外部，不负责验证传出数据
</code></pre><h5 id="Mock-Object"><a href="#Mock-Object" class="headerlink" title="Mock Object"></a>Mock Object</h5><pre><code>和Test Spy类似，但负责验证传出的数据
</code></pre><h5 id="Fake-Object"><a href="#Fake-Object" class="headerlink" title="Fake Object"></a>Fake Object</h5><pre><code>和Test Stub类似，不关注SUT内部间接输入输出，仅仅是用来代替一个实际的对象
</code></pre><h3 id="测试夹具（Test-Fixture）"><a href="#测试夹具（Test-Fixture）" class="headerlink" title="测试夹具（Test Fixture）"></a>测试夹具（Test Fixture）</h3><p>在测试之前自动初始化、回收资源。JUnit4中有@before和@After注解的方法，每个测试之前之后都执行一次。但这个缺点是效率低。</p>
<p>JUnit4引入类级别的夹具设置方法：</p>
<pre><code>使用@beforeClass和@afterClass修饰，且方法用public static void 修饰
</code></pre><h3 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h3><p>JUnit4中测试方法用@Test修饰方法，一个测试用例可以有多个测试方法</p>
<h3 id="测试套件（Test-Suite）"><a href="#测试套件（Test-Suite）" class="headerlink" title="测试套件（Test Suite）"></a>测试套件（Test Suite）</h3><p>将多个测试用例组装成一个测试套件，批量运行。使用@RunWith和@SuiteClasses注解空类</p>
<pre><code>@RunWith(Suite.class) 表示此类为运行器
@SuiteClasses({}) 把测试用例类作为它的参数
</code></pre><h3 id="断言（Assertiosn）"><a href="#断言（Assertiosn）" class="headerlink" title="断言（Assertiosn）"></a>断言（Assertiosn）</h3><p>判断某个语句的结果是否为真，判断是否和预期相符，例如：Assert.assertEquals()方法。可以使用assert关键字，使用它必须指定Java的-ea参数，否则断言将被忽略</p>
<h2 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h2><p>验证功能模块之间集成后的正确性</p>
<h2 id="JUnit4"><a href="#JUnit4" class="headerlink" title="JUnit4"></a>JUnit4</h2><p>优秀测试框架具备几点：</p>
<ul>
<li>单元测试必须独立于其他的单元测试</li>
<li>单元测试中产生的错误必须被记录下来</li>
<li>用户能够轻松指定要执行的单元测试</li>
</ul>
<p>JUnit4采用Java 5的注解而不是子类，反射或命名机制来识别测试，它不是JUnit3.8的扩展版本，而是一个全新的测试框架</p>
<h4 id="Test"><a href="#Test" class="headerlink" title="@Test"></a>@Test</h4><p>注解测试方法，参数：</p>
<ul>
<li>expected 抛出异常类型，如果测试方法没有抛出这个异常，测试失败</li>
<li>timeout 设置超时时间，如果运行时间超过这个值，测试失败</li>
</ul>
<h4 id="参数化测试"><a href="#参数化测试" class="headerlink" title="参数化测试"></a>参数化测试</h4><ul>
<li>使用@RunWith 指定特殊运行器：Parameterized.class</li>
<li>声明一个带参数构造参数</li>
<li>创建一个@Parameterized.Parameters方法返回多组数据</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RunWith</span>(Parameterized.class)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamTest</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Integer value;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ParamTest</span><span class="params">(Integer value)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.value = value;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Parameterized</span>.Parameters</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Collection&lt;Integer[]&gt; data() &#123;</div><div class="line">        Integer[][] data = <span class="keyword">new</span> Integer[][]&#123;&#123;<span class="number">1</span>&#125;,&#123;<span class="number">3</span>&#125;,&#123;<span class="number">5</span>&#125;,&#123;<span class="number">7</span>&#125;&#125;;</div><div class="line">        <span class="keyword">return</span> Arrays.asList(data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="keyword">assert</span> <span class="keyword">this</span>.value &lt; <span class="number">5</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="测试运行器"><a href="#测试运行器" class="headerlink" title="测试运行器"></a>测试运行器</h4><p>执行测试方法的，默认测试运行器BlockJUnit4ClassRunner.可以自定义运行器，只要继承org.junit.runner.Runner,使用@Runwith显示地声明</p>
<h4 id="Junit4断言"><a href="#Junit4断言" class="headerlink" title="Junit4断言"></a>Junit4断言</h4><p>assertArrayEquals方法比较数组是否相等，只有两个数组的元素都相等，则两个数组相等。</p>
<h4 id="assertThat断言"><a href="#assertThat断言" class="headerlink" title="assertThat断言"></a>assertThat断言</h4><p>assertThat断言是结合Hamcrest新的断言语句。结合Hamcrest提供匹配符，Hamcrest是个测试辅助工具，提供一套通用匹配符Matcher,有个静态类Matchers</p>
<h2 id="模拟利器Mockito"><a href="#模拟利器Mockito" class="headerlink" title="模拟利器Mockito"></a>模拟利器Mockito</h2><p>是一套通过简单方法对于指定接口或类生成Mock对象的类库</p>
<h4 id="Stub对象"><a href="#Stub对象" class="headerlink" title="Stub对象"></a>Stub对象</h4><p>提供测试时所需要的测试数据，对各种交互设置相应的回应。when().thenReturn() 设置方法调用的返回值，也可以设置方法何时调用会抛出异常</p>
<pre><code>when(mockUserService.getUserByName(&quot;devin&quot;)).thenReturn(new User(&quot;devin&quot;, &quot;123&quot;));
</code></pre><h4 id="Mock对象"><a href="#Mock对象" class="headerlink" title="Mock对象"></a>Mock对象</h4><p>验证测试中所依赖对象间的交互是否能够达到预期，verify().methodXxx()语法来验证methodXxx方法是否按照预期进行了调用<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">when(mockUserService.getUserByName(<span class="string">"devin"</span>)).thenReturn(<span class="keyword">new</span> User(<span class="string">"devin"</span>, <span class="string">"123"</span>));</div><div class="line"></div><div class="line">      User devin = mockUserService.getUserByName(<span class="string">"devin"</span>);</div><div class="line">      assertNotNull(devin);</div><div class="line"></div><div class="line">      verify(mockUserService).getUserByName(<span class="string">"devin"</span>);</div></pre></td></tr></table></figure></p>
<h2 id="Mockito-使用"><a href="#Mockito-使用" class="headerlink" title="Mockito 使用"></a>Mockito 使用</h2><h4 id="创建Mock对象"><a href="#创建Mock对象" class="headerlink" title="创建Mock对象"></a>创建Mock对象</h4><p>对于final类，匿名类和Java的基本类型无法进行Mock,创建方式：</p>
<ul>
<li>mock(Class) 方法</li>
<li>@mock注解，注解需要MockitoAnnotations.initMocks方法初始化</li>
</ul>
<h4 id="设置Mock对象的期望行为及返回值"><a href="#设置Mock对象的期望行为及返回值" class="headerlink" title="设置Mock对象的期望行为及返回值"></a>设置Mock对象的期望行为及返回值</h4><p>通过when(mock.someMethod).thenReturn(value),对于static和final修饰的方法无法设定</p>
<ul>
<li>when().thenReturn()</li>
<li>doReturnn().when().methodXxx()  </li>
<li>doNothing().when().methodXxx()  返回void</li>
</ul>
<h4 id="验证交互行为"><a href="#验证交互行为" class="headerlink" title="验证交互行为"></a>验证交互行为</h4><p>Mock对象一旦建立会自动记录自己的交互行为</p>
<ul>
<li>verify(mock, atLeastOnce()).methodXxx 方法至少调用一次</li>
<li>verify(mock, atLeast(1)).methodXxx</li>
<li>verify(mock, atMost(1)).methodXxx 至多调用一次</li>
<li><ul>
<li>verify(mock, never()).methodXxx 从未</li>
</ul>
</li>
</ul>
<h2 id="测试整合之王Unitils"><a href="#测试整合之王Unitils" class="headerlink" title="测试整合之王Unitils"></a>测试整合之王Unitils</h2><p>构建DbUnit和EasyMock项目之上，与JUnit和TestNG结合，支持数据库测试、支持Mock对象进行测试，并提供与Spring和Hibernate集成</p>
<h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><ul>
<li>unitils-defaults.properties 默认配置文件，开启所以功能</li>
<li>unitils.properties 项目级配置文件</li>
<li>unitils-local.properties 用户级配置文件</li>
</ul>
<h3 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h3><h4 id="assertReflectionEquals-反射断言"><a href="#assertReflectionEquals-反射断言" class="headerlink" title="assertReflectionEquals 反射断言"></a>assertReflectionEquals 反射断言</h4><p>判断两个对象是否相等，判断对象属性值是否一样，不需要重写equals方法</p>
<pre><code>ReflectionAssert.AssertReflectionEquals()
</code></pre><ul>
<li>IGNORE_DEFAULTS 忽略Java类型默认值</li>
<li>LENIENT_DATES 忽略Date的值是否相等，比较是不是被设置值或都为null</li>
<li>LENIENT_ORDER 忽略集合数组中元素顺序</li>
</ul>
<h4 id="assertLenientEquals"><a href="#assertLenientEquals" class="headerlink" title="assertLenientEquals"></a>assertLenientEquals</h4><p>忽略顺序忽略默认值的断言</p>
<h4 id="assertPropertyXxxEquals-属性断言"><a href="#assertPropertyXxxEquals-属性断言" class="headerlink" title="assertPropertyXxxEquals 属性断言"></a>assertPropertyXxxEquals 属性断言</h4><p>只比较对象特定属性assertPropertyReflectionEquals和assertPropertyLenientEquals</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;软件测试分为单元测试、集成测试、功能测试、系统测试。&lt;/p&gt;
&lt;h2 id=&quot;单元测试&quot;&gt;&lt;a href=&quot;#单元测试&quot; class=&quot;headerlink&quot; title=&quot;单元测试&quot;&gt;&lt;/a&gt;单元测试&lt;/h2&gt;&lt;p&gt;测试某个功能正确性，通常情况一个功能模块会关联多个其他功
    
    </summary>
    
      <category term="Java" scheme="https://duansiman.github.io/categories/Java/"/>
    
    
      <category term="单元测试" scheme="https://duansiman.github.io/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Linux-运维</title>
    <link href="https://duansiman.github.io/2017/05/05/Linux-%E8%BF%90%E7%BB%B4/"/>
    <id>https://duansiman.github.io/2017/05/05/Linux-运维/</id>
    <published>2017-05-05T10:01:21.000Z</published>
    <updated>2017-06-26T01:59:13.714Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改SSH端口和禁止Root远程登录"><a href="#修改SSH端口和禁止Root远程登录" class="headerlink" title="修改SSH端口和禁止Root远程登录"></a>修改SSH端口和禁止Root远程登录</h2><p>修改端口</p>
<pre><code>/etc/ssh/sshd_config文件中
修改SSH端口，修改port后的端口
</code></pre><p>禁止Root远程登录：</p>
<pre><code>把PermitRootLogin yes 改为 PermitRootLogin no
重启服务，service ssh restart
</code></pre><h2 id="流量监控"><a href="#流量监控" class="headerlink" title="流量监控"></a>流量监控</h2><h4 id="vnstat"><a href="#vnstat" class="headerlink" title="vnstat"></a>vnstat</h4><p>安装</p>
<pre><code>apt-get install vnstat
</code></pre><p>创建监听数据库</p>
<pre><code>vnstat -u -i eth0    -&gt;    eth0是系统网卡
</code></pre><p>启动服务</p>
<pre><code>service vnstat start
</code></pre><p>开机自启动，在/etc/rc.local文件中加：</p>
<pre><code>service vnstat start
</code></pre><p>查看流量情况命令</p>
<pre><code>每天的，vnstat -d
每月的，vnstat -m    
实时流量，vnstat -l -i eth0
查看五秒平均流量，vnstat -tr -i eth0
</code></pre><p>不能统计流量，需要修改.eh0权限，在/var/lib/vnstat目录中</p>
<pre><code>chown vnstat:vnstat .eth0 -R
chmod 0640 .eth0
</code></pre><h2 id="rz，sz命令"><a href="#rz，sz命令" class="headerlink" title="rz，sz命令"></a>rz，sz命令</h2><p>sz：将选定的文件发送（send）到本地机器<br>rz：运行该命令会弹出一个文件选择窗口，从本地选择文件上传到服务器(receive)</p>
<p><code>注意：</code>单独用rz会有两个问题：上传中断、上传文件变化（md5不同），解决办法是上传是用rz -be，并且去掉弹出的对话框中“Upload files as ASCII”前的勾选。</p>
<pre><code>-b binary 用binary的方式上传下载，不解释字符为ascii
-e 强制escape 所有控制字符，比如Ctrl+x，DEL等
</code></pre><p>安装</p>
<pre><code>下载地址    http://www.ohse.de/uwe/software/lrzsz.html
配置        ./configure --prefix=/usr/local/lrzsz
编译        make
安装        make install
</code></pre><p>创建连接    </p>
<pre><code>cd /usr/bin  
sudo ln -s /usr/local/lrzsz/bin/lrz rz  
sudo ln -s /usr/local/lrzsz/bin/lsz sz 
</code></pre><h2 id="boot分区不足-清理boot分区"><a href="#boot分区不足-清理boot分区" class="headerlink" title="/boot分区不足,清理boot分区"></a>/boot分区不足,清理boot分区</h2><p>查看系统已安装内核    </p>
<pre><code>dpkg --get-selections|grep linux-image
</code></pre><p>查看系统使用内核</p>
<pre><code>uname -a    
</code></pre><p>删除不使用内核</p>
<pre><code>sudo apt-get purge 内核名称
sudo apt-get remove linux-image-(版本号)
</code></pre><p>清理</p>
<pre><code>清理/usr/src下的内核目录
sudo apt-get autoremove 删除残留文件
</code></pre><h2 id="xshell连接linux系统，操作卡"><a href="#xshell连接linux系统，操作卡" class="headerlink" title="xshell连接linux系统，操作卡"></a>xshell连接linux系统，操作卡</h2><p>关闭DNS解析，修改/etc/ssh/sshd_config文件中：</p>
<pre><code>UseDNS no
/etc/init.d/sshd restart
</code></pre><h2 id="系统使用技巧"><a href="#系统使用技巧" class="headerlink" title="系统使用技巧"></a>系统使用技巧</h2><ul>
<li>执行某命令时忘记加sudo, 可以输入sudo !! 即可，这里的 !! 代表上一条命令</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;修改SSH端口和禁止Root远程登录&quot;&gt;&lt;a href=&quot;#修改SSH端口和禁止Root远程登录&quot; class=&quot;headerlink&quot; title=&quot;修改SSH端口和禁止Root远程登录&quot;&gt;&lt;/a&gt;修改SSH端口和禁止Root远程登录&lt;/h2&gt;&lt;p&gt;修改端口&lt;/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git</title>
    <link href="https://duansiman.github.io/2017/05/05/Git%E5%91%BD%E4%BB%A4/"/>
    <id>https://duansiman.github.io/2017/05/05/Git命令/</id>
    <published>2017-05-05T09:03:22.000Z</published>
    <updated>2017-06-26T01:43:49.213Z</updated>
    
    <content type="html"><![CDATA[<pre><code>git status        查看状态
git init        初始化 git 仓库
git fsck        仓库一致性检查
git gc            压缩
</code></pre><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><pre><code>git log 查看日志
</code></pre><p>git config –global alias.lg “log –graph –pretty=format:’%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ –abbrev-commit –date=relative”</p>
<h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p>ssh-keygen -t rsa                    生成公钥密钥</p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>设置全局账号</p>
<pre><code>git config --global user.email &quot;you@example.com&quot;
git config --global user.name &quot;Your Name&quot;
</code></pre><p>设置账号</p>
<pre><code>git config  user.email &quot;you@example.com&quot;
git config  user.name &quot;Your Name&quot;
</code></pre><p>设置别名，即 git co == git checkout</p>
<pre><code>git config --global alias.co checkout   # 别名
git config --global alias.psm &apos;push origin master&apos;
</code></pre><p>默认情况下 git 用的编辑器是 vi，设置Editor使用vim                  </p>
<pre><code>git config --global core.editor &quot;vim&quot;
</code></pre><p>开启给 Git 着色</p>
<pre><code>git config --global color.ui true
</code></pre><p>设置显示中文文件名                              </p>
<pre><code>git config --global core.quotepath false
</code></pre><p>增加Git’s HTTP buffer                         </p>
<pre><code>git config http.postBuffer 524288000    
</code></pre><p>默认这些配置都在 ~/.gitconfig，可以输入 git config -l 命令查看</p>
<h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><pre><code>git diff                                                
    提交前查看有哪些改动
git add                            
    提交的文件
git commit -m ‘注释’                    
    提交
git add &amp; git commit                    
    把改动添加到一个「暂存区」然后提交，防止误提交
git rm --cached                        
    移除未提交的缓存
</code></pre><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><pre><code>git branch                                
    查看下本地分支情况
git branch -a                        
    查看所有分支，包括本地和远程
git branch -r                        
    查看远程分支
git branch test                        
    新建分支test
git branch -d test                    
    删除分支test
git branch -D test                    
    强制删除分支test，如果test分支没有整合
</code></pre><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><pre><code>git tag                            查看版本
git tag v1.0                        贴标签，版本控制
</code></pre><h2 id="切换"><a href="#切换" class="headerlink" title="切换"></a>切换</h2><pre><code>git checkout test                    切换分支
git checkout origin/test                把远程分支test，拉到本地
git checkout -b test                    新建分支test，并切换到test分支下
git checkout v1.0                    切换到每个标签，即版本
</code></pre><h2 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h2><pre><code>git checkout a.md                    
    把原文件还原，只能撤销还没有 add 进暂存区的文件
git checkout file1 file2 ... fileN             
    一次回滚多个文件，中间用空格隔开即可
git checkout .                         
    直接回滚当前目录一下的所有working tree内的修改，会递归扫描当前目录下的所有子目录
</code></pre><h2 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h2><pre><code>git merge    test                        合并分支， 在master分支执行这命令
</code></pre><h2 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h2><pre><code>git push origin master                本地代码推到远程 master 分支
git push -f                                           强推，覆盖相同的内容
git pull origin master                远程最新的代码更新到本地
git clone url                        把项目 clone 到了本地
</code></pre><h2 id="关联"><a href="#关联" class="headerlink" title="关联"></a>关联</h2><pre><code>git remote add origin url                与 GitHub 上的项目进行关联,origin 是给这个项目的远程仓库起的名字
git remote remove &lt;name&gt;                 取消关联
git remote rm 分支                    删除关联
git remote -v                        当前项目有哪些远程仓库    
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;git status        查看状态
git init        初始化 git 仓库
git fsck        仓库一致性检查
git gc            压缩
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;日志&quot;&gt;&lt;a href=&quot;
    
    </summary>
    
      <category term="Git" scheme="https://duansiman.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://duansiman.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git学习</title>
    <link href="https://duansiman.github.io/2017/05/05/Git%E5%AD%A6%E4%B9%A0/"/>
    <id>https://duansiman.github.io/2017/05/05/Git学习/</id>
    <published>2017-05-05T09:03:22.000Z</published>
    <updated>2017-06-26T01:43:49.216Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Git" scheme="https://duansiman.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://duansiman.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>快捷键</title>
    <link href="https://duansiman.github.io/2017/05/04/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://duansiman.github.io/2017/05/04/快捷键/</id>
    <published>2017-05-04T08:26:06.000Z</published>
    <updated>2017-05-04T08:44:33.670Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sublime-text-3"><a href="#Sublime-text-3" class="headerlink" title="Sublime text 3"></a>Sublime text 3</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Ctrl Shift L</td>
<td style="text-align:left">选中多行编辑</td>
</tr>
<tr>
<td style="text-align:left">Ctrl J</td>
<td style="text-align:left">多行变一行</td>
</tr>
</tbody>
</table>
<h2 id="IntelliJ-IDEA"><a href="#IntelliJ-IDEA" class="headerlink" title="IntelliJ IDEA"></a>IntelliJ IDEA</h2><table>
<thead>
<tr>
<th style="text-align:left">快捷键</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Ctrl+Shift+V</td>
<td style="text-align:left">选择剪切板上的文本进行插入</td>
</tr>
<tr>
<td style="text-align:left">右击断点</td>
<td style="text-align:left">可以看到断点属性</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+H</td>
<td style="text-align:left">打开类的层次结构</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+W</td>
<td style="text-align:left">选择文本</td>
</tr>
<tr>
<td style="text-align:left">Alt+F8/Alt+点击表达式</td>
<td style="text-align:left">调试时看表达式值</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Q</td>
<td style="text-align:left">查看文档说明</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+P</td>
<td style="text-align:left">查看方法参数提示</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+B</td>
<td style="text-align:left">打开方法或类声明地方</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+N</td>
<td style="text-align:left">搜索类</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+N</td>
<td style="text-align:left">搜索文件</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+Alt+N</td>
<td style="text-align:left">搜索文本</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Alt+V</td>
<td style="text-align:left">把表达式提出为局部</td>
</tr>
<tr>
<td style="text-align:left">Alt+Shift+C</td>
<td style="text-align:left">查看项目最近修改地方</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+`</td>
<td style="text-align:left">修改style/color scheme or keymap</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+Enter</td>
<td style="text-align:left">自动补全代码if,do-while,return,try-catch</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Alt+Shift+C</td>
<td style="text-align:left">复制field/method/class/file</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+向下上箭头</td>
<td style="text-align:left">移动代码块</td>
</tr>
<tr>
<td style="text-align:left">Alt+Shift+F10</td>
<td style="text-align:left">打开run/debug菜单</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+I</td>
<td style="text-align:left">预览class/file/symbol代码</td>
</tr>
<tr>
<td style="text-align:left">Shift+F6</td>
<td style="text-align:left">重命名</td>
</tr>
<tr>
<td style="text-align:left">Alt+Home</td>
<td style="text-align:left">导航栏，修改项目view</td>
</tr>
<tr>
<td style="text-align:left">Alt+F7</td>
<td style="text-align:left">搜索方法，变量在哪被引用</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+F</td>
<td style="text-align:left">全局搜索</td>
</tr>
<tr>
<td style="text-align:left">Ctrl+Shift+Z</td>
<td style="text-align:left">反撤销，Ctrl+Z的反操作</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Sublime-text-3&quot;&gt;&lt;a href=&quot;#Sublime-text-3&quot; class=&quot;headerlink&quot; title=&quot;Sublime text 3&quot;&gt;&lt;/a&gt;Sublime text 3&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th 
    
    </summary>
    
      <category term="计算机" scheme="https://duansiman.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="快捷键" scheme="https://duansiman.github.io/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>Maven</title>
    <link href="https://duansiman.github.io/2017/04/26/Maven/"/>
    <id>https://duansiman.github.io/2017/04/26/Maven/</id>
    <published>2017-04-26T07:37:02.000Z</published>
    <updated>2017-06-26T01:43:57.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre><code>mvn [options] [&lt;goal(s)&gt;] [&lt;phase(s)&gt;]
options     可以用mvn -h 或 mvn --help查看
phase        是生命周期阶段
</code></pre><h2 id="生命周期阶段"><a href="#生命周期阶段" class="headerlink" title="生命周期阶段"></a>生命周期阶段</h2><p>有clean、default和site几类，下面出现的顺序就是执行顺序。</p>
<h4 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h4><p>pre-clean, clean, post-clean</p>
<h4 id="default"><a href="#default" class="headerlink" title="default"></a>default</h4><p>validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy</p>
<h4 id="site"><a href="#site" class="headerlink" title="site"></a>site</h4><p>pre-site, site, post-site, site-deploy</p>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><pre><code>mvn package -Dmaven.skip.test=true 
    打war包
java -cp XXX.jar Main
    执行main方法
</code></pre><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><h3 id="Dependency-插件"><a href="#Dependency-插件" class="headerlink" title="Dependency 插件"></a>Dependency 插件</h3><p>分析</p>
<pre><code>mvn dependency:analyze
</code></pre><p>查看项目依赖</p>
<pre><code>mvn dependency:resolve
mvn dependency:tree            列出直接和传递性依赖，以树形式打印
mvn install -X                打开调试标记，查看完整依赖踪迹，包括因为冲突被拒绝加入的构件
</code></pre><h3 id="Exec-插件"><a href="#Exec-插件" class="headerlink" title="Exec 插件"></a>Exec 插件</h3><p>运行Java类或其他脚本</p>
<pre><code>mvn exec:java -Dexec.mainClass=com.epdc.maven.App
</code></pre><h3 id="Surefire插件"><a href="#Surefire插件" class="headerlink" title="Surefire插件"></a>Surefire插件</h3><p>处理单元测试的，如下配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">configuration</span>&gt;</span><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>运行到test阶段为止所有生命周期阶段</p>
<pre><code>mvn test    有测试单元失败，会停止当前的构建
</code></pre><h4 id="configuration"><a href="#configuration" class="headerlink" title="configuration"></a>configuration</h4><p>忽略测试失败,或者mvn test -Dmaven.test.failure.ignore=ture</p>
<pre><code>&lt;testFailureIgnore&gt;true&lt;/testFailureIgnore&gt;
</code></pre><p>完成跳过单元测试，或者mvn test -Dmaven.test.skip=ture</p>
<pre><code>&lt;skip&gt;true&lt;/skip&gt;
</code></pre><h3 id="Assembly插件"><a href="#Assembly插件" class="headerlink" title="Assembly插件"></a>Assembly插件</h3><p>创建应用程序特有分发包，包括项目的二进制文件和所有的依赖，配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="Archetype-插件"><a href="#Archetype-插件" class="headerlink" title="Archetype 插件"></a>Archetype 插件</h3><h4 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h4><p>创建项目</p>
<pre><code>mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app    java项目
mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-app -DarchetypeArtifactId=maven-archetype-webapp    web项目
</code></pre><h3 id="Jetty插件"><a href="#Jetty插件" class="headerlink" title="Jetty插件"></a>Jetty插件</h3><p>运行web应用，配置<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.3.14.v20161028<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                 <span class="tag">&lt;<span class="name">scanIntervalSeconds</span>&gt;</span>1<span class="tag">&lt;/<span class="name">scanIntervalSeconds</span>&gt;</span></div><div class="line">             <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>启动web应用</p>
<pre><code>mvn jetty:run
</code></pre><h3 id="Help插件"><a href="#Help插件" class="headerlink" title="Help插件"></a>Help插件</h3><p>pom继承超级pom 和 父pom, 得到混合各个pom配置的有效pom。effective-pom目标可以查看有效pom</p>
<pre><code>mvn help:effective-pom
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;mvn [options] [&amp;lt;goal(s)&amp;gt;] [&amp;lt;phase(s)&amp;gt;]
options    
    
    </summary>
    
      <category term="Java" scheme="https://duansiman.github.io/categories/Java/"/>
    
    
      <category term="Maven" scheme="https://duansiman.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper</title>
    <link href="https://duansiman.github.io/2017/04/26/Zookeeper/"/>
    <id>https://duansiman.github.io/2017/04/26/Zookeeper/</id>
    <published>2017-04-26T06:49:57.000Z</published>
    <updated>2017-05-03T10:07:35.334Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置-conf-zoo-cfg"><a href="#配置-conf-zoo-cfg" class="headerlink" title="配置(conf/zoo.cfg)"></a>配置(conf/zoo.cfg)</h2><p>启动时会找zoo.cfg文件作为默认配置文件,所以复制一份zoo_sample.cfg</p>
<pre><code>tickTime：服务器之间或客户端与服务器之间维持心跳的时间间隔，每个 tickTime 时间就会发送一个心跳
dataDir ：保存数据的目录，将写数据的日志文件也保存在这个目录里
clientPort：监听这个端口，接受客户端的访问请求
</code></pre><p>启动命令</p>
<pre><code>./zkServer.sh start
</code></pre><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><pre><code>./zkCli.sh -server localhost:2181
</code></pre><h2 id="占用8080端口"><a href="#占用8080端口" class="headerlink" title="占用8080端口"></a>占用8080端口</h2><p>zookeeper有个内嵌的管理控制台是通过jetty启动，也会占用8080端口。可以启动脚本中修改</p>
<pre><code>admin.serverPort=port 
</code></pre><p>或者停止这服务</p>
<pre><code>admin.enableServer=false
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;配置-conf-zoo-cfg&quot;&gt;&lt;a href=&quot;#配置-conf-zoo-cfg&quot; class=&quot;headerlink&quot; title=&quot;配置(conf/zoo.cfg)&quot;&gt;&lt;/a&gt;配置(conf/zoo.cfg)&lt;/h2&gt;&lt;p&gt;启动时会找zoo.cfg文件作为
    
    </summary>
    
      <category term="Java" scheme="https://duansiman.github.io/categories/Java/"/>
    
      <category term="分布式" scheme="https://duansiman.github.io/categories/Java/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="Zookeeper" scheme="https://duansiman.github.io/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>Java RMI</title>
    <link href="https://duansiman.github.io/2017/04/26/Java-RMI/"/>
    <id>https://duansiman.github.io/2017/04/26/Java-RMI/</id>
    <published>2017-04-26T03:20:29.000Z</published>
    <updated>2017-04-26T03:24:49.840Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RMI是什么"><a href="#RMI是什么" class="headerlink" title="RMI是什么"></a>RMI是什么</h2><ul>
<li>RMI是一套足够优秀的socket框架.</li>
<li>RMI是相对比较简单命名服务</li>
<li>RMI是aop的经典实用例子</li>
<li>相关辅助功能，比如本地GC</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;RMI是什么&quot;&gt;&lt;a href=&quot;#RMI是什么&quot; class=&quot;headerlink&quot; title=&quot;RMI是什么&quot;&gt;&lt;/a&gt;RMI是什么&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;RMI是一套足够优秀的socket框架.&lt;/li&gt;
&lt;li&gt;RMI是相对比较简单命名服务&lt;/li
    
    </summary>
    
      <category term="Java" scheme="https://duansiman.github.io/categories/Java/"/>
    
      <category term="分布式" scheme="https://duansiman.github.io/categories/Java/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="RMI" scheme="https://duansiman.github.io/tags/RMI/"/>
    
  </entry>
  
  <entry>
    <title>tomcat</title>
    <link href="https://duansiman.github.io/2017/04/18/tomcat/"/>
    <id>https://duansiman.github.io/2017/04/18/tomcat/</id>
    <published>2017-04-18T07:35:52.000Z</published>
    <updated>2017-04-18T08:01:00.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启动多个"><a href="#启动多个" class="headerlink" title="启动多个"></a>启动多个</h2><h4 id="修改http端口（默认8080）"><a href="#修改http端口（默认8080）" class="headerlink" title="修改http端口（默认8080）"></a>修改http端口（默认8080）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;Connector port=<span class="string">"8080"</span> protocol=<span class="string">"HTTP/1.1"</span>  connectionTimeout=<span class="string">"60000"</span>  </div><div class="line">	redirectPort=<span class="string">"8443"</span> <span class="built_in">disable</span>UploadTimeout=<span class="string">"false"</span>  executor=<span class="string">"tomcatThreadPool"</span> URIEncoding=<span class="string">"UTF-8"</span>/&gt;</div></pre></td></tr></table></figure>
<h4 id="修改远程停服务端口（默认8005）"><a href="#修改远程停服务端口（默认8005）" class="headerlink" title="修改远程停服务端口（默认8005）"></a>修改远程停服务端口（默认8005）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;Server port=<span class="string">"8005"</span> shutdown=<span class="string">"SHUTDOWN"</span>&gt;</div></pre></td></tr></table></figure>
<h4 id="修改AJP端口（默认8009）"><a href="#修改AJP端口（默认8009）" class="headerlink" title="修改AJP端口（默认8009）"></a>修改AJP端口（默认8009）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;Connector port=<span class="string">"8009"</span> protocol=<span class="string">"AJP/1.3"</span> redirectPort=<span class="string">"8443"</span> /&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;启动多个&quot;&gt;&lt;a href=&quot;#启动多个&quot; class=&quot;headerlink&quot; title=&quot;启动多个&quot;&gt;&lt;/a&gt;启动多个&lt;/h2&gt;&lt;h4 id=&quot;修改http端口（默认8080）&quot;&gt;&lt;a href=&quot;#修改http端口（默认8080）&quot; class=&quot;head
    
    </summary>
    
      <category term="应用服务器" scheme="https://duansiman.github.io/categories/%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Tomcat" scheme="https://duansiman.github.io/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>nginx</title>
    <link href="https://duansiman.github.io/2017/04/18/nginx/"/>
    <id>https://duansiman.github.io/2017/04/18/nginx/</id>
    <published>2017-04-18T03:34:07.000Z</published>
    <updated>2017-04-21T10:25:07.089Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启动、停止和重新加载服务"><a href="#启动、停止和重新加载服务" class="headerlink" title="启动、停止和重新加载服务"></a>启动、停止和重新加载服务</h2><pre><code>nginx
nginx -s stop
nginx -s reload
nginx -s quit        退出
nginx -t             检查配置文件
</code></pre><h2 id="配置（-etc-nginx-nginx-conf、-etc-nginx-conf-d-default-conf）"><a href="#配置（-etc-nginx-nginx-conf、-etc-nginx-conf-d-default-conf）" class="headerlink" title="配置（/etc/nginx/nginx.conf、/etc/nginx/conf.d/default.conf）"></a>配置（/etc/nginx/nginx.conf、/etc/nginx/conf.d/default.conf）</h2><pre><code>worker_processes
    进程的个数，建议设置为CPU的个数
worker_connections
    单进程的最大连接数
server
    listen                监听端口
    server_name            服务的域名，可以配置多个用空格隔开
</code></pre><h2 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h2><p>在http中配置</p>
<pre><code>#设定负载均衡的服务器列表  
upstream mysvr {  
    #weigth参数表示权值，权值越高被分配到的几率越大    
    #同一机器在多网情况下，路由切换，ip可能不同
    server 127.0.0.1:8080 weight=1;  
    server 127.0.0.1:8090 weight=1;  
    server 127.0.0.1:8070 weight=1;  
}
</code></pre><h2 id="代理、反向代理"><a href="#代理、反向代理" class="headerlink" title="代理、反向代理"></a>代理、反向代理</h2><h2 id="nginx-403-Forbidden"><a href="#nginx-403-Forbidden" class="headerlink" title="nginx 403 Forbidden"></a>nginx 403 Forbidden</h2><p>nginx的启动用户默认是nginx用户，需要修改web目录的权限</p>
<h2 id="静态文件缓存"><a href="#静态文件缓存" class="headerlink" title="静态文件缓存"></a>静态文件缓存</h2><p>server中配置缓存，需要指定root值，否则默认是Nginx的目录，会导致找不到文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#静态文件缓存时间设置</span></div><div class="line">   location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</div><div class="line">        root   /root/blog_front/blog-front/dist;</div><div class="line">        expires 30d;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="comment">#静态文件缓存时间设置</span></div><div class="line">   location ~ .*\.(js|css)?$ &#123;</div><div class="line">        root   /root/blog_front/blog-front/dist;</div><div class="line">        expires 1h;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;启动、停止和重新加载服务&quot;&gt;&lt;a href=&quot;#启动、停止和重新加载服务&quot; class=&quot;headerlink&quot; title=&quot;启动、停止和重新加载服务&quot;&gt;&lt;/a&gt;启动、停止和重新加载服务&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;nginx
nginx -s stop
ng
    
    </summary>
    
      <category term="应用服务器" scheme="https://duansiman.github.io/categories/%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="nginx" scheme="https://duansiman.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>归并排序</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    <id>https://duansiman.github.io/2017/04/18/归并排序/</id>
    <published>2017-04-18T02:19:19.000Z</published>
    <updated>2017-05-13T08:48:11.992Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h2><p>将问题分解为若干个规模小但类型原问题的子问题,递归地求解这些子问题,然后合并这些子问题的解来求原问题的解.<br>三个步骤<br>    分解:把问题分解成若干个规模小的子问题,这些子问题是原问题的规模小的实例<br>    解决:递归求解各个子问题,如果规模足够小,直接求解<br>    合并:根据子问题的解,求原问题解</p>
<h2 id="排序原理"><a href="#排序原理" class="headerlink" title="排序原理"></a>排序原理</h2><p>分解:把待排序N个元素的序列分解成两个N/2个元素的子序列<br>解决:递归地排序两个子序列,但子序列长度为1.递归返回<br>合并:把两个已排序的子序列,合并成一个已排序的序列</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> p, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (p &lt; r) &#123;</div><div class="line">    <span class="keyword">int</span> q = (p + r)/<span class="number">2</span>;</div><div class="line">    mergeSort(A, p, q);</div><div class="line">    mergeSort(A, q+<span class="number">1</span>, r);</div><div class="line">    merge(A, p, q, r);</div><div class="line">&#125;</div><div class="line"></div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> p, <span class="keyword">int</span> q, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">       <span class="keyword">int</span>[] lp = <span class="keyword">new</span> <span class="keyword">int</span>[q - p + <span class="number">1</span>];</div><div class="line">       <span class="keyword">int</span>[] lq = <span class="keyword">new</span> <span class="keyword">int</span>[r - q];</div><div class="line">       System.arraycopy(A, p, lp, <span class="number">0</span>, q - p + <span class="number">1</span>);</div><div class="line">       System.arraycopy(A, q+<span class="number">1</span>, lq, <span class="number">0</span>, r - q);</div><div class="line">       <span class="keyword">int</span> k = p, i, j;</div><div class="line">       <span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; lp.length &amp;&amp; j &lt; lq.length; k++) &#123;</div><div class="line">           <span class="keyword">if</span> (lp[i] &gt; lq[j]) &#123;</div><div class="line">               A[k] = lq[j];</div><div class="line">               j++;</div><div class="line">           &#125; <span class="keyword">else</span> &#123;</div><div class="line">               A[k] = lp[i];</div><div class="line">               i++;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="keyword">if</span> (i &lt; lp.length) &#123;</div><div class="line">           <span class="keyword">for</span> (;i&lt;lp.length;i++,k++) &#123;</div><div class="line">               A[k] = lp[i];</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="keyword">if</span> (j &lt; lq.length) &#123;</div><div class="line">           <span class="keyword">for</span> (;j&lt;lq.length;j++,k++) &#123;</div><div class="line">               A[k] = lq[j];</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><p>merge方法合并N/2长两个序列需要N长时间.当子序列长度为1,递归返回时,merge合并N/2对长度为1的子序列,即总时间N.<br>然而这递归过程可以建立一个二叉树,N个元素当做叶子节点.非叶子节点即是两个子节点序列合并而成. 所以这颗树的高度是logN,每一层合并的时间是N.因此归并排序时间复杂度是:NlogN</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;分治法&quot;&gt;&lt;a href=&quot;#分治法&quot; class=&quot;headerlink&quot; title=&quot;分治法&quot;&gt;&lt;/a&gt;分治法&lt;/h2&gt;&lt;p&gt;将问题分解为若干个规模小但类型原问题的子问题,递归地求解这些子问题,然后合并这些子问题的解来求原问题的解.&lt;br&gt;三个步骤&lt;br&gt; 
    
    </summary>
    
      <category term="数据结构和算法" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="归并排序" scheme="https://duansiman.github.io/tags/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>分治策略</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%88%86%E6%B2%BB%E7%AD%96%E7%95%A5/"/>
    <id>https://duansiman.github.io/2017/04/18/分治策略/</id>
    <published>2017-04-18T02:19:19.000Z</published>
    <updated>2017-05-13T08:48:22.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>有时候需要求解和原问题完全不一样的子问题,称为合并子问题步骤的一部分.</p>
<h2 id="最大子数组"><a href="#最大子数组" class="headerlink" title="最大子数组"></a>最大子数组</h2><p>一个序列A[n],按着分治思想把序列分成A[1,mid]和A[mid+1, n]序列.这时,最大子数组要么在A[1,mid]里面,要么在A[mid+1, n]里面,还有可能是跨中间A[i,mid,j]序列中</p>
<h2 id="递归伪代码"><a href="#递归伪代码" class="headerlink" title="递归伪代码"></a>递归伪代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Tuple <span class="title">findMax</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</div><div class="line">    Tuple&lt;Integer, Integer, Integer&gt; tuple = <span class="keyword">new</span> Tuple&lt;&gt;();</div><div class="line">    <span class="keyword">if</span> (low == high) &#123;</div><div class="line">        tuple.left = low;</div><div class="line">        tuple.right = high;</div><div class="line">        tuple.sum = A[low];</div><div class="line">        <span class="keyword">return</span> tuple;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">int</span> mid = (low + high)/<span class="number">2</span>;</div><div class="line">        Tuple&lt;Integer, Integer, Integer&gt; lTuple = findMax(A, low, mid);</div><div class="line">        Tuple&lt;Integer, Integer, Integer&gt; cTuple = findCrossMax(A, low, mid, high);</div><div class="line">        Tuple&lt;Integer, Integer, Integer&gt; rTuple = findMax(A, mid + <span class="number">1</span>, high);</div><div class="line">        <span class="keyword">if</span> (lTuple.sum &gt; cTuple.sum &amp;&amp; lTuple.sum &gt; rTuple.sum) &#123;</div><div class="line">            <span class="keyword">return</span> lTuple;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rTuple.sum &gt; cTuple.sum &amp;&amp; rTuple.sum &gt; lTuple.sum) &#123;</div><div class="line">            <span class="keyword">return</span> rTuple;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> cTuple;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Tuple <span class="title">findCrossMax</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> low, <span class="keyword">int</span> mid, <span class="keyword">int</span> high)</span></span>&#123;</div><div class="line">    Tuple&lt;Integer, Integer, Integer&gt; tuple = <span class="keyword">new</span> Tuple&lt;&gt;();</div><div class="line">    <span class="keyword">int</span> lSum = Integer.MIN_VALUE;</div><div class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> l = -<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = mid; i &gt;= low; i--) &#123;</div><div class="line">        temp += A[i];</div><div class="line">        <span class="keyword">if</span> (temp &gt; lSum) &#123;</div><div class="line">            lSum = temp;</div><div class="line">            l = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> rSum = Integer.MIN_VALUE;</div><div class="line">    <span class="keyword">int</span> r = -<span class="number">1</span>;</div><div class="line">    temp = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = mid; i &lt;= high; i++) &#123;</div><div class="line">        temp += A[i];</div><div class="line">        <span class="keyword">if</span> (temp &gt; rSum) &#123;</div><div class="line">            rSum = temp;</div><div class="line">            r= i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    tuple.left=l;</div><div class="line">    tuple.right=r;</div><div class="line">    tuple.sum = lSum + rSum - A[mid];</div><div class="line">    <span class="keyword">return</span> tuple;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="线性时间求解"><a href="#线性时间求解" class="headerlink" title="线性时间求解"></a>线性时间求解</h2><p>若已知A[1…j]的最大子数组，A[1…j+1]的最大子数组要么是A[1…j]的最大子数组，要么是某个子数组A<a href="1&lt;=i&lt;=j+1">i…j+1</a>.在已知A[1…j]的最大子数组的情况下，可以在线性时间内找出形如A[i..j+1]的最大子数组</p>
<h2 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Tuple <span class="title">findMaxOfLine</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</div><div class="line">    Tuple&lt;Integer, Integer, Integer&gt; tuple = <span class="keyword">new</span> Tuple&lt;&gt;();</div><div class="line">    <span class="keyword">int</span> sum = A[low];</div><div class="line">    <span class="keyword">int</span> eSum = A[low];</div><div class="line">    <span class="keyword">int</span> l=low;</div><div class="line">    <span class="keyword">int</span> r=low;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = low+<span class="number">1</span>; i &lt;= high; i++) &#123;</div><div class="line">        eSum += A[i];</div><div class="line">        <span class="keyword">if</span> (eSum &gt; sum) &#123;<span class="comment">//判断A[1...j]是否为最大子数组</span></div><div class="line">            r=i;</div><div class="line">            sum=eSum;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> temp = eSum;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = l; j &lt; i; j++) &#123; <span class="comment">//判断A[i...j+1]是否为最大子数组</span></div><div class="line">            temp -= A[j];</div><div class="line">            <span class="keyword">if</span> (temp &gt; sum) &#123;</div><div class="line">                l=j+<span class="number">1</span>;</div><div class="line">                r=i;</div><div class="line">                sum=temp;</div><div class="line">                eSum = temp;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    tuple.left=l;</div><div class="line">    tuple.right=r;</div><div class="line">    tuple.sum=sum;</div><div class="line">    <span class="keyword">return</span> tuple;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="伪代码2"><a href="#伪代码2" class="headerlink" title="伪代码2"></a>伪代码2</h2><p>如果一个数组A[k..j]求和得到负值，那么数组A[k..j+1]的最大子数组肯定不会是A[k..j+1]，因为A[k..j]+A[j+1]<a[j+1] <figure="" class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Tuple <span class="title">findMaxOfLine2</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> tempSum=<span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> sum=Integer.MIN_VALUE;</div><div class="line">    Tuple&lt;Integer, Integer, Integer&gt; tuple = <span class="keyword">new</span> Tuple&lt;&gt;();</div><div class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)&#123;</div><div class="line">        tempSum+=A[i];</div><div class="line">        <span class="keyword">if</span>(tempSum &gt; sum) &#123;</div><div class="line">            sum=tempSum;</div><div class="line">            tuple.left = k;</div><div class="line">            tuple.right=i;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(tempSum &lt; <span class="number">0</span>) &#123;</div><div class="line">            tempSum=<span class="number">0</span>;</div><div class="line">            k=i+<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    tuple.sum = sum;</div><div class="line">    <span class="keyword">return</span> tuple;</div><div class="line">&#125;</div></pre></td></tr></table></a[j+1]></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;有时候需要求解和原问题完全不一样的子问题,称为合并子问题步骤的一部分.&lt;/p&gt;
&lt;h2 id=&quot;最大子数组&quot;&gt;&lt;a href=&quot;#最大子数组
    
    </summary>
    
      <category term="数据结构和算法" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="分治策略" scheme="https://duansiman.github.io/tags/%E5%88%86%E6%B2%BB%E7%AD%96%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>单词词性</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%8D%95%E8%AF%8D%E8%AF%8D%E6%80%A7/"/>
    <id>https://duansiman.github.io/2017/04/18/单词词性/</id>
    <published>2017-04-18T02:19:19.000Z</published>
    <updated>2017-06-26T01:43:49.247Z</updated>
    
    <content type="html"><![CDATA[<h2 id="人称代词"><a href="#人称代词" class="headerlink" title="人称代词"></a>人称代词</h2><p>代词主格：做主语    </p>
<pre><code>I,You,He,She,It,We,You,They
</code></pre><p>代词宾格：动后介后</p>
<pre><code>me,you,him,her,it,us,you,them        
Tom loves him.
</code></pre><p>代词形容格:跟着名词    </p>
<pre><code>my,your,his,her,its,our,your,their    
her friend    她的朋友
</code></pre><p>代词名词格        </p>
<pre><code>mine,yours,his,hers,ours,yours,theirs    
The car is yours
</code></pre><p>名词格=形容格+名词    </p>
<pre><code>The book is mine. Yousr is here.这本书是我的，你的在这儿
</code></pre><p>反身代词：主语和表语指同一个人，宾语用反身代词</p>
<pre><code>myself,yourself,himself,herself,isself,ourselves,yourselves,themselves
</code></pre><h2 id="副词"><a href="#副词" class="headerlink" title="副词"></a>副词</h2><p>修饰形容词，直接放前面</p>
<pre><code>例如：very happy
</code></pre><p>修饰动词，放在反面</p>
<pre><code>例如：Tom misses his sister very much. Tom非常想念他的姐姐    very much 修饰 miss
</code></pre><p>修饰名词，放在后面</p>
<pre><code>例如：the kids there 哪里的小孩
</code></pre><h2 id="冠词"><a href="#冠词" class="headerlink" title="冠词"></a>冠词</h2><h4 id="the"><a href="#the" class="headerlink" title="the"></a>the</h4><p>可以和名词的单数、复数和不可数搭配，表达这个，这些</p>
<h4 id="a-an"><a href="#a-an" class="headerlink" title="a,an"></a>a,an</h4><p>元音字母a,e,i,o,u<br>挨着最近的词开头发元音 + an<br>an old man<br>an hour</p>
<h2 id="指示代词"><a href="#指示代词" class="headerlink" title="指示代词"></a>指示代词</h2><p>This is water 这些是水<br>That is water 那些是水<br>these are books<br>those are books</p>
<h2 id="动词"><a href="#动词" class="headerlink" title="动词"></a>动词</h2><p>变化规则</p>
<table>
<thead>
<tr>
<th style="text-align:left">动词</th>
<th style="text-align:left">规则变化</th>
<th style="text-align:left">不规则变化</th>
<th style="text-align:left">例子</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">动s/名复</td>
<td style="text-align:left">+s</td>
<td style="text-align:left">s,o,f,y</td>
<td style="text-align:left">man-&gt;men,woman-&gt;women,child-&gt;children,tooth-&gt;teeth,foot-&gt;feet. 以s/ss/sh/ch/x结尾的单词+es,例如:bus-&gt;buses,dish-&gt;dishes,watch-&gt;watches.  o原则 1)有生命+es, 例如:hero-&gt;heroes, potato-&gt;potatoes, tomato-&gt;tomato 2)无生命 + s 例如:zoo-&gt;zoos, photo-&gt;photos. f,fe原则 1)多数变f,fe 为ves 例如:wife-&gt;wives, knife-&gt;knives, yourself-yourselves. y原则 1)辅音字母+y, 变y为i加es 例如:baby-&gt;babies, city-&gt;cities 2)元音字母(a,e,i,o,u)+y, 直接加s 例如:day-&gt; days, boy-&gt;boys</td>
</tr>
<tr>
<td style="text-align:left">动过/动分</td>
<td style="text-align:left">+ed</td>
<td style="text-align:left">y,e,双</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">动ing</td>
<td style="text-align:left">+ing</td>
<td style="text-align:left">y,e,双</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;人称代词&quot;&gt;&lt;a href=&quot;#人称代词&quot; class=&quot;headerlink&quot; title=&quot;人称代词&quot;&gt;&lt;/a&gt;人称代词&lt;/h2&gt;&lt;p&gt;代词主格：做主语    &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I,You,He,She,It,We,You,They
&lt;/code
    
    </summary>
    
      <category term="English" scheme="https://duansiman.github.io/categories/English/"/>
    
    
      <category term="单词词性" scheme="https://duansiman.github.io/tags/%E5%8D%95%E8%AF%8D%E8%AF%8D%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>插入算法</title>
    <link href="https://duansiman.github.io/2017/04/18/%E6%8F%92%E5%85%A5%E7%AE%97%E6%B3%95/"/>
    <id>https://duansiman.github.io/2017/04/18/插入算法/</id>
    <published>2017-04-18T02:19:19.000Z</published>
    <updated>2017-05-13T08:48:24.024Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>插入排序是使用了增量方法,在已经排序好的子数组A[1..j-1]中插入A[j],产生已经排序好的子数组A[1..j]</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span>[] datas = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</div><div class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; datas.length; i++) &#123;	<span class="comment">//次数-&gt;n-1</span></div><div class="line">           <span class="keyword">int</span> k = i;</div><div class="line">           <span class="keyword">int</span> value = datas[i];</div><div class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> j = i-<span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;		<span class="comment">//次数-&gt;最坏n-1,最好1</span></div><div class="line">               <span class="keyword">if</span> (datas[j] &gt; value) &#123;</div><div class="line">                   datas[k] = datas[j];</div><div class="line">                   k = j;</div><div class="line">               &#125;</div><div class="line">           &#125;</div><div class="line">           <span class="keyword">if</span> (k != i) &#123;</div><div class="line">               datas[k] = value;</div><div class="line">           &#125;</div><div class="line">       &#125;</div></pre></td></tr></table></figure>
<h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><p>外层循环n-1次,内层循环次数,也是元素的比较次数</p>
<pre><code>最好情况:数组A[n]是已经排序好的,那么元素比较次数是1
最坏情况数组A[n]是反序的,那么元素比较次数是n-1
</code></pre><p>所以最好情况是n,最坏情况是n^2</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;插入排序是使用了增量方法,在已经排序好的子数组A[1..j-1]中插入A[j],产生已经排序好的子数组A[1..j]&lt;/p&gt;
&lt;h2 id=
    
    </summary>
    
      <category term="数据结构和算法" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="插入算法" scheme="https://duansiman.github.io/tags/%E6%8F%92%E5%85%A5%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>句子时态</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%8F%A5%E5%AD%90%E6%97%B6%E6%80%81/"/>
    <id>https://duansiman.github.io/2017/04/18/句子时态/</id>
    <published>2017-04-18T02:16:57.000Z</published>
    <updated>2017-06-26T01:43:49.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一般现在时"><a href="#一般现在时" class="headerlink" title="一般现在时"></a>一般现在时</h2><h4 id="主系表结构或There-Be"><a href="#主系表结构或There-Be" class="headerlink" title="主系表结构或There Be"></a>主系表结构或There Be</h4><p>谓语: is/am are</p>
<h4 id="主谓-宾-结构"><a href="#主谓-宾-结构" class="headerlink" title="主谓(宾)结构"></a>主谓(宾)结构</h4><p>谓语: 动原/动s, 助动词do, does(助动词出现,谓动用原性)</p>
<h2 id="一般过去时"><a href="#一般过去时" class="headerlink" title="一般过去时"></a>一般过去时</h2><h4 id="主系表结构或There-Be-1"><a href="#主系表结构或There-Be-1" class="headerlink" title="主系表结构或There Be"></a>主系表结构或There Be</h4><p>谓语: was were</p>
<h4 id="主谓-宾-结构-1"><a href="#主谓-宾-结构-1" class="headerlink" title="主谓(宾)结构"></a>主谓(宾)结构</h4><p>谓语: 动过, 助动词did(助动词出现,谓动用原性)</p>
<h4 id="出现过去的时间-用一般过去时"><a href="#出现过去的时间-用一般过去时" class="headerlink" title="出现过去的时间,用一般过去时"></a>出现过去的时间,用一般过去时</h4><p>just now, yesterday, last Saturday, last Sunday, three days age, long long age</p>
<h4 id="语境暗示了动作发生在过去"><a href="#语境暗示了动作发生在过去" class="headerlink" title="语境暗示了动作发生在过去"></a>语境暗示了动作发生在过去</h4><p>when did you come back ? 你什么时候回来的?<br>I loved you. 我爱过你</p>
<h2 id="一般将来时"><a href="#一般将来时" class="headerlink" title="一般将来时"></a>一般将来时</h2><h4 id="主系表结构或There-Be-2"><a href="#主系表结构或There-Be-2" class="headerlink" title="主系表结构或There Be"></a>主系表结构或There Be</h4><p>谓语: whil be</p>
<h4 id="主谓-宾-结构-2"><a href="#主谓-宾-结构-2" class="headerlink" title="主谓(宾)结构"></a>主谓(宾)结构</h4><p>谓语: will + 动原<br>否定句 will not + 动原<br>疑问句 Will you be in Paris tomorrow ?<br>Will there be a party next week ?<br>特殊疑问句 Who will visit us tomorrow ?<br>What will he do tomorrow ?</p>
<h4 id="Be-going-to"><a href="#Be-going-to" class="headerlink" title="Be going to"></a>Be going to</h4><p>谓语: is/am/are going to + be<br>谓语: is/am/are going to + 动原<br>疑问句: Are you going to know my story?<br>特殊疑问句 Who is he going to Be?</p>
<h4 id="will-和-Be-going-to-对比"><a href="#will-和-Be-going-to-对比" class="headerlink" title="will 和 Be going to 对比"></a>will 和 Be going to 对比</h4><p>表示意愿 用will</p>
<pre><code>Marry me!I will make you happy.
Will you help me?
</code></pre><p>表示预测 用will/Be going to</p>
<pre><code>It will be warm tomorrow. 明天会变暖和
</code></pre><p>表示计划,先规划好 用Be going to</p>
<pre><code>I have the pen and the paper.
I am going to draw a picture for you.
</code></pre><h4 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h4><p>will not = won’t<br>I will = I’ll</p>
<h4 id="出现将来时间-用一般将来时"><a href="#出现将来时间-用一般将来时" class="headerlink" title="出现将来时间,用一般将来时"></a>出现将来时间,用一般将来时</h4><p>in three days 三天后<br>tomorrow, the day after tomorrow 后天, next week<br>soon 要开始,很快</p>
<h3 id="情态动词-can-may-must"><a href="#情态动词-can-may-must" class="headerlink" title="情态动词(can, may, must)"></a>情态动词(can, may, must)</h3><p>情态动词 + 动原</p>
<p>肯定句:You can help me.<br>否定句:You can not help me.<br>疑问句:Can you help me?<br>特殊疑问句: Who can help me? Who can you help?</p>
<h4 id="can-could"><a href="#can-could" class="headerlink" title="can, could"></a>can, could</h4><p>could 是can 过去式</p>
<h5 id="表达能力-could并表示过去式"><a href="#表达能力-could并表示过去式" class="headerlink" title="表达能力, could并表示过去式"></a>表达能力, could并表示过去式</h5><p>We can use WeChat now.</p>
<h5 id="求人办事-could并不表示过去式-表示语气-could更委婉"><a href="#求人办事-could并不表示过去式-表示语气-could更委婉" class="headerlink" title="求人办事, could并不表示过去式,表示语气,could更委婉"></a>求人办事, could并不表示过去式,表示语气,could更委婉</h5><p>Can/Could you open the door?</p>
<h5 id="请人允许-could并不表示过去式-表示语气-could更委婉"><a href="#请人允许-could并不表示过去式-表示语气-could更委婉" class="headerlink" title="请人允许 could并不表示过去式,表示语气,could更委婉"></a>请人允许 could并不表示过去式,表示语气,could更委婉</h5><p>Can/Could I sit here ?<br>Can/Could I help you ?</p>
<h5 id="猜测-意思可能"><a href="#猜测-意思可能" class="headerlink" title="猜测,意思可能"></a>猜测,意思可能</h5><p>He can be our teacher.<br>Anything can happen.</p>
<h4 id="may-might"><a href="#may-might" class="headerlink" title="may, might"></a>may, might</h4><p>might是may的过去式</p>
<h5 id="请人允许"><a href="#请人允许" class="headerlink" title="请人允许"></a>请人允许</h5><p>May I help you?</p>
<h5 id="猜测-意思可能-1"><a href="#猜测-意思可能-1" class="headerlink" title="猜测,意思可能"></a>猜测,意思可能</h5><p>He may be our teacher.</p>
<h4 id="must"><a href="#must" class="headerlink" title="must"></a>must</h4><h5 id="必须"><a href="#必须" class="headerlink" title="必须"></a>必须</h5><p>I must  learn English.(客观)<br>I have to learn English. (不得不)</p>
<h5 id="必须不-禁止"><a href="#必须不-禁止" class="headerlink" title="必须不,禁止"></a>必须不,禁止</h5><p>I mustn’t learn English.<br>I don’t have to learn English.(不必须)<br>I needn’t learn English.(不需要)</p>
<h5 id="猜测-意思肯定是"><a href="#猜测-意思肯定是" class="headerlink" title="猜测,意思肯定是"></a>猜测,意思肯定是</h5><p>He must be out teacher.<br>He must be over forty.</p>
<h4 id="求人办事-礼貌递增"><a href="#求人办事-礼貌递增" class="headerlink" title="求人办事,礼貌递增"></a>求人办事,礼貌递增</h4><p>can &lt; will &lt; could &lt; would<br>Can you do me a favor ? I’d like to, but …</p>
<h4 id="请人允许-1"><a href="#请人允许-1" class="headerlink" title="请人允许"></a>请人允许</h4><p>can &lt; could &lt; may &lt; might(礼貌过头)<br>Can i smoke here? Yes please.   Sorry, you can’t</p>
<h4 id="猜测-程度递减"><a href="#猜测-程度递减" class="headerlink" title="猜测,程度递减"></a>猜测,程度递减</h4><p>肯定句(100%) &gt; must(95%) &gt; can/could/may/might(50%) &gt; can’t(5%) &gt; 否定句(0%)<br>He must be a smoker.</p>
<h2 id="现在进行时"><a href="#现在进行时" class="headerlink" title="现在进行时"></a>现在进行时</h2><h4 id="主系表结构或There-Be-3"><a href="#主系表结构或There-Be-3" class="headerlink" title="主系表结构或There Be"></a>主系表结构或There Be</h4><p>谓语: is/am/are + being</p>
<h4 id="主谓-宾-结构-3"><a href="#主谓-宾-结构-3" class="headerlink" title="主谓(宾)结构"></a>主谓(宾)结构</h4><p>谓语: is/am/are + 动ing</p>
<p>否定句: She is not doing her homework at home.<br>疑问句: Is She doing her homework at home?</p>
<p>What are you doing?你干什么呢?</p>
<h2 id="过去进行时"><a href="#过去进行时" class="headerlink" title="过去进行时"></a>过去进行时</h2><h4 id="主系表结构或There-Be-4"><a href="#主系表结构或There-Be-4" class="headerlink" title="主系表结构或There Be"></a>主系表结构或There Be</h4><p>谓语: was/were + being</p>
<h4 id="主谓-宾-结构-4"><a href="#主谓-宾-结构-4" class="headerlink" title="主谓(宾)结构"></a>主谓(宾)结构</h4><p>谓语: was/were + 动ing</p>
<h3 id="一般过去-过去进行时-对比"><a href="#一般过去-过去进行时-对比" class="headerlink" title="一般过去,过去进行时 对比"></a>一般过去,过去进行时 对比</h3><p>一般过去时表示过去的时间完整做了某事<br>I read a book yeaterday (看完了)</p>
<p>过去进行时表示过去的时间正在做某事<br>I was reading a book just now (未知是否读完)</p>
<p>I went shopping this morning.</p>
<h2 id="现在完成时"><a href="#现在完成时" class="headerlink" title="现在完成时"></a>现在完成时</h2><h4 id="主系表结构或There-Be-5"><a href="#主系表结构或There-Be-5" class="headerlink" title="主系表结构或There Be"></a>主系表结构或There Be</h4><p>谓语: has/have + been</p>
<h4 id="主谓-宾-结构-5"><a href="#主谓-宾-结构-5" class="headerlink" title="主谓(宾)结构"></a>主谓(宾)结构</h4><p>谓语: has/have + 过分</p>
<p>Jake has finished her homework.<br>Jake has not finished her homework.<br>Has jake finished her homework?<br>who has finished the homework?<br>what has Jake finished?</p>
<h3 id="现在完成时-一般过去时-对比"><a href="#现在完成时-一般过去时-对比" class="headerlink" title="现在完成时,一般过去时 对比"></a>现在完成时,一般过去时 对比</h3><p>一般过去时:只是陈述一件发生的事件,与现在无关<br>现在完成时:过去动作对现在有影响</p>
<p>Jake has just(刚刚) turned off the light.(别人不用去关灯)</p>
<p>一般过去时:无法判断是否持续<br>现在完成时:表示动作现在持续</p>
<p>He has lived her for 4 years (现在还住在这儿)<br>He lived here for 4 year.(住过,不知道是否继续住)</p>
<p>How long have you learned English ? 你学英语多长了?(现在依然在学)</p>
<p>现在完成时的信号词: 到现在为止<br>so far, up to now, till now, by now<br>since + 过去的时间系列<br>since three days age<br>since you left</p>
<p>一般过去时的信号词<br>just now<br>last yesterday</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一般现在时&quot;&gt;&lt;a href=&quot;#一般现在时&quot; class=&quot;headerlink&quot; title=&quot;一般现在时&quot;&gt;&lt;/a&gt;一般现在时&lt;/h2&gt;&lt;h4 id=&quot;主系表结构或There-Be&quot;&gt;&lt;a href=&quot;#主系表结构或There-Be&quot; class=&quot;head
    
    </summary>
    
      <category term="English" scheme="https://duansiman.github.io/categories/English/"/>
    
    
      <category term="句子时态" scheme="https://duansiman.github.io/tags/%E5%8F%A5%E5%AD%90%E6%97%B6%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>句子成分</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%8F%A5%E5%AD%90%E6%88%90%E5%88%86/"/>
    <id>https://duansiman.github.io/2017/04/18/句子成分/</id>
    <published>2017-04-18T02:16:57.000Z</published>
    <updated>2017-06-26T01:43:49.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="词性担当"><a href="#词性担当" class="headerlink" title="词性担当"></a>词性担当</h2><p>主语——名、代（主格）<br>谓语——动词<br>表语——名、代、形、副(少量)、介宾<br>宾语——名、代（宾格）</p>
<h2 id="定语"><a href="#定语" class="headerlink" title="定语"></a>定语</h2><p>修饰名词，对名词进行限定的语言</p>
<h4 id="形容词做定语：形容-名"><a href="#形容词做定语：形容-名" class="headerlink" title="形容词做定语：形容+名"></a>形容词做定语：形容+名</h4><p>a clean room</p>
<h4 id="介宾做定语：名-介宾"><a href="#介宾做定语：名-介宾" class="headerlink" title="介宾做定语：名+介宾"></a>介宾做定语：名+介宾</h4><p>the box on the table 桌子上的盒子</p>
<h4 id="部分副词做定语：名-副词"><a href="#部分副词做定语：名-副词" class="headerlink" title="部分副词做定语：名+副词"></a>部分副词做定语：名+副词</h4><p>children there 哪里的小孩</p>
<h2 id="状语"><a href="#状语" class="headerlink" title="状语"></a>状语</h2><p>修饰动词，介宾、副词担当，放在句首、句尾和句中都可以</p>
<p>表示频度副词, 可以放句中. 例如: I often go shopping.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;词性担当&quot;&gt;&lt;a href=&quot;#词性担当&quot; class=&quot;headerlink&quot; title=&quot;词性担当&quot;&gt;&lt;/a&gt;词性担当&lt;/h2&gt;&lt;p&gt;主语——名、代（主格）&lt;br&gt;谓语——动词&lt;br&gt;表语——名、代、形、副(少量)、介宾&lt;br&gt;宾语——名、代（宾格）&lt;/p&gt;
    
    </summary>
    
      <category term="English" scheme="https://duansiman.github.io/categories/English/"/>
    
    
      <category term="句子成分" scheme="https://duansiman.github.io/tags/%E5%8F%A5%E5%AD%90%E6%88%90%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>句子结构</title>
    <link href="https://duansiman.github.io/2017/04/18/%E5%8F%A5%E5%AD%90%E7%BB%93%E6%9E%84/"/>
    <id>https://duansiman.github.io/2017/04/18/句子结构/</id>
    <published>2017-04-18T02:12:19.000Z</published>
    <updated>2017-04-20T03:23:21.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主系表"><a href="#主系表" class="headerlink" title="主系表"></a>主系表</h2><pre><code>主语+be+表语
</code></pre><p>肯定句:He is in the car.<br>否定句:He is not in the car.<br>一般疑问句:Is he in the car?    Yes,he is. No,he isn’t.</p>
<p>谁在车里？<br>特殊疑问句——提问主语:Who is in the car?</p>
<pre><code>疑问词+is,am,are+主语？
</code></pre><p>他在哪儿？<br>特殊疑问句——提问非主语:Where is he?</p>
<h4 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h4><p>I am         -&gt; I’m<br>He is         -&gt; He’s<br>It is         -&gt; It’s<br>They are    -&gt; They’re<br>I am not    -&gt; I’m not<br>is not        -&gt; isn’t<br>are not        -&gt; aren’t</p>
<h2 id="主谓（宾）"><a href="#主谓（宾）" class="headerlink" title="主谓（宾）"></a>主谓（宾）</h2><pre><code>主语+非be+(宾语)+状语
</code></pre><h4 id="非三单-动原"><a href="#非三单-动原" class="headerlink" title="非三单+动原+"></a>非三单+动原+</h4><p>否定句：非三单+do not+动原+<br>一般疑问句:Do+非三单+动原+<br>特殊疑问句——提问主语：语序不变<br>特殊疑问句——提问非主语：特助主谓，特殊疑问词+主动词do+非三单+动原+</p>
<h4 id="三单-动s"><a href="#三单-动s" class="headerlink" title="三单+动s+"></a>三单+动s+</h4><p>否定句:三单+does not+动原+<br>一般疑问句:Does+三单+动原+<br>特殊疑问句——提问主语：语序不变<br>特殊疑问句——提问非主语：特助主谓，特殊疑问词+主动词does+三单+动原+</p>
<h4 id="三单"><a href="#三单" class="headerlink" title="三单"></a>三单</h4><p>人称代词：第三人称 -&gt; he、she、it<br>指示代词：this、this book、that、that dog<br>名词:单数，不可数名词</p>
<h4 id="非三单"><a href="#非三单" class="headerlink" title="非三单"></a>非三单</h4><p>人称代词:I you we they<br>指示代词:these、those<br>名词:复数</p>
<p>肯定句:They learn English every day.</p>
<p>他们每天不学英语。<br>否定句:They don’t learn English every day.</p>
<p>他们每天学英语吗？<br>一般疑问句:Do they learn English every day?</p>
<p>谁每天学英语？<br>特殊疑问句——提问主语:Who learn English every day?</p>
<p>他们每天学什么？<br>特殊疑问句——提问非主语:What do they learn every day?</p>
<h2 id="There-be-结构"><a href="#There-be-结构" class="headerlink" title="There be 结构"></a>There be 结构</h2><pre><code>(There + is/are)(存在) + 名词 + (地点)
</code></pre><p>There 不是主语，只是占主语位置。所以is/are由后面名词决定。<br>表达存在，而have表示拥有，例如：我有三辆车 I have three cars.</p>
<h4 id="就近原则"><a href="#就近原则" class="headerlink" title="就近原则"></a>就近原则</h4><p>There is a cat and two dogs under the tree.<br>There are two dogs and a cat under the tree.</p>
<p>肯定句:There are many students in the classroom<br>否定句:There are not many students in the classroom(some 在否定句中变成 any)<br>一般疑问句:Are there many students in the classroom?</p>
<p>教室里有多少同学？<br>特殊疑问句:How many students are there in the classroom?<br>How much + 不可数名词+is there + 地点<br>How many + 可数名词 + are there + 地点</p>
<h2 id="中译英"><a href="#中译英" class="headerlink" title="中译英"></a>中译英</h2><h4 id="找主谓——定结构"><a href="#找主谓——定结构" class="headerlink" title="找主谓——定结构"></a>找主谓——定结构</h4><pre><code>主谓（宾）
主系表
there be
</code></pre><h4 id="中-中’-英——定语序"><a href="#中-中’-英——定语序" class="headerlink" title="中-中’-英——定语序"></a>中-中’-英——定语序</h4><pre><code>方式、地点、时间
从小到大
句首状语
</code></pre><p>每天6点他在家写作业吗？<br>Dose he do his homework at home at six every day ?</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;主系表&quot;&gt;&lt;a href=&quot;#主系表&quot; class=&quot;headerlink&quot; title=&quot;主系表&quot;&gt;&lt;/a&gt;主系表&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;主语+be+表语
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;肯定句:He is in the car.&lt;br&gt;否定句:He i
    
    </summary>
    
      <category term="English" scheme="https://duansiman.github.io/categories/English/"/>
    
    
      <category term="句子结构" scheme="https://duansiman.github.io/tags/%E5%8F%A5%E5%AD%90%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 知识点</title>
    <link href="https://duansiman.github.io/2017/04/17/MySQL-%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://duansiman.github.io/2017/04/17/MySQL-知识点/</id>
    <published>2017-04-17T10:40:55.000Z</published>
    <updated>2017-06-26T01:43:57.647Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置文件在/etc/mysql/my.cnf,一些配置内容如下：</p>
<pre><code>max_connections        
    最大支持连接数，设置到500～1000比较合适
wait-timeout        
    数据库连接闲置最大时间值，默认值为8小时 
</code></pre><h2 id="URL-格式"><a href="#URL-格式" class="headerlink" title="URL 格式"></a>URL 格式</h2><pre><code>jdbc:mysql://[host][,failoverhost...][:port]/[database]
?[propertyName1][=propertyValue1][&amp;propertyName2][=propertyValue2]...
</code></pre><p>常用参数：</p>
<table>
<thead>
<tr>
<th style="text-align:left">参数名称</th>
<th style="text-align:left">说明</th>
<th style="text-align:left">默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">useUnicode</td>
<td style="text-align:left">是否使用Unicode字符集</td>
<td style="text-align:left">false</td>
</tr>
<tr>
<td style="text-align:left">characterEncoding</td>
<td style="text-align:left">当useUnicode设置为true时，指定字符编码</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">autoReconnect</td>
<td style="text-align:left">当数据库连接异常中断时，是否自动重新连接</td>
<td style="text-align:left">false</td>
</tr>
<tr>
<td style="text-align:left">autoReconnectForPools</td>
<td style="text-align:left">是否使用针对数据库连接池的重连策略</td>
<td style="text-align:left">false</td>
</tr>
<tr>
<td style="text-align:left">failOverReadOnly</td>
<td style="text-align:left">自动重连成功后，连接是否设置为只读</td>
<td style="text-align:left">true</td>
</tr>
<tr>
<td style="text-align:left">maxReconnects</td>
<td style="text-align:left">autoReconnect设置为true时，重试连接的次数</td>
<td style="text-align:left">3</td>
</tr>
<tr>
<td style="text-align:left">initialTimeout</td>
<td style="text-align:left">autoReconnect设置为true时，两次重连之间的时间间隔，单位：秒</td>
<td style="text-align:left">2秒</td>
</tr>
<tr>
<td style="text-align:left">connectTimeout</td>
<td style="text-align:left">和数据库服务器建立socket连接时的超时，单位：毫秒。 0表示永不超时</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">socketTimeout</td>
<td style="text-align:left">socket操作（读写）超时，单位：毫秒。 0表示永不超时</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">useAffectedRows</td>
<td style="text-align:left">是否用受影响的行数替代查找到的行数来返回数据，例如：当修改的内容与原数据相同，mysql自己返回受影响行数为0，但jdbc/mybatis 返回的却是1，返回的是 sql语句 的匹配行数</td>
</tr>
</tbody>
</table>
<p><a href="https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-reference-configuration-properties.html" target="_blank" rel="external">官方参数配置参考</a></p>
<h2 id="配置主从数据库"><a href="#配置主从数据库" class="headerlink" title="配置主从数据库"></a>配置主从数据库</h2><p>主ip:192.186.0.101,从ip:192.186.0.102</p>
<h4 id="主数据库配置"><a href="#主数据库配置" class="headerlink" title="主数据库配置"></a>主数据库配置</h4><p>在/etc/mysql/my.cnf文件增加如下配置：</p>
<pre><code>[mysqld]
#主数据库id
server-id=1
#需要同步的database
binlog-do-db=blog
#忽略同步的database
binlog-ignore-db=mysql
#开启二进制日志机制
log-bin=/var/lib/mysql/binlog
</code></pre><p>查看日志信息，得到二进制日志的文件名(file)和位置信息（position）</p>
<pre><code>show master status
</code></pre><h4 id="导主数据库已存在的数据"><a href="#导主数据库已存在的数据" class="headerlink" title="导主数据库已存在的数据"></a>导主数据库已存在的数据</h4><p>主数据库导出数据</p>
<pre><code>mysqldump -uname -ppass database &gt; database.sql
</code></pre><p>从数据库导入数据</p>
<pre><code>source database.sql
</code></pre><h4 id="从数据库配置"><a href="#从数据库配置" class="headerlink" title="从数据库配置"></a>从数据库配置</h4><p>在/etc/mysql/my.cnf文件增加如下配置：</p>
<pre><code>[mysqld]
#从数据库id，不能和主数据库的相同
server-id=2
</code></pre><p>配置同步参数</p>
<pre><code>CHANGE MASTER TO 
MASTER_HOST=&apos;192.186.0.101&apos;
MASTER_USER=&apos;root&apos;
MASTER_PASSWORD=&apos;123456&apos;
MASTER_LOG_FILE=&apos;binlog.000001&apos;
MASTER_LOG_POS=154;
</code></pre><p>MASTER_HOST 主数据库所在服务器ip<br>MASTER_USER,MASTER_PASSWORD链接主数据库的用户密码<br>MASTER_LOG_FILE,MASTER_LOG_POS是从主数据库查到日志信息</p>
<p>启动同步进程</p>
<pre><code>start slave
show slave status\G
    查看进程状态
</code></pre><p>进程状态有两个值，都为YES表示配置成功</p>
<pre><code>Slave_IO_Runing 负责去主数据库读取二进制日志，并写入从数据库的中继日志
Slave_SQL_Runing 负责把中继日志转换sql执行
</code></pre><h2 id="允许外网访问"><a href="#允许外网访问" class="headerlink" title="允许外网访问"></a>允许外网访问</h2><p>注释/etc/mysql/mysql.conf.d/mysqld.cnf中 </p>
<pre><code>bind-address    = 127.0.0.1
</code></pre><p>查询用户</p>
<pre><code>use mysql;
select user,host from user;
</code></pre><p>授权任意主机都可以以用户root和密码pass连接</p>
<pre><code>GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;pass&apos; WITH GRANT OPTION;
flush privileges;
</code></pre><p>授权192.186.0.102主机都可以以用户root和密码pass连接</p>
<pre><code>GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;192.186.0.102&apos; IDENTIFIED BY &apos;pass&apos; WITH GRANT OPTION;
flush privileges;
</code></pre><h2 id="编码问题"><a href="#编码问题" class="headerlink" title="编码问题"></a>编码问题</h2><p>创建数据库表时指定编码和排序编码</p>
<pre><code>CREATE DATABASE `test`  CHARACTER SET &apos;utf8&apos;  COLLATE &apos;utf8_general_ci&apos;; 
CREATE TABLE `test` () ENGINE=InnoDB DEFAULT CHARSET=utf8;
</code></pre><p>查看默认编码</p>
<pre><code>show variables like &quot;%char%&quot;;
</code></pre><p>设置编码</p>
<pre><code>SET character_set_client=&apos;utf8&apos;;  
SET character_set_connection=&apos;utf8&apos;;  
SET character_set_results=&apos;utf8&apos;;    
</code></pre><p>设置默认编码</p>
<pre><code>set names utf8;
</code></pre><p>在/etc/mysql/my.cnf配置默认编码</p>
<pre><code>[mysqld]
default_character_set=utf8;
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;配置文件在/etc/mysql/my.cnf,一些配置内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;max_connections       
    
    </summary>
    
      <category term="数据库" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://duansiman.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL知识点" scheme="https://duansiman.github.io/tags/MySQL%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>Vim命令</title>
    <link href="https://duansiman.github.io/2017/04/17/Vim%E5%91%BD%E4%BB%A4/"/>
    <id>https://duansiman.github.io/2017/04/17/Vim命令/</id>
    <published>2017-04-17T03:07:22.000Z</published>
    <updated>2017-06-26T01:43:49.243Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><p>删除</p>
<pre><code>x, X       x 为向后删除一个字符, X为向前删除一个字符
nx         连续向后删除 n 个字符
dd         删除游标所在这行
ndd        删除游标所在向下n行
d1G        删除光标所在到第一行的所有数据
dG         删除光标所在到最后一行的所有数据
d$         删除游标所在处，到该行的最后一个字符
d0         删除游标所在处，到该行的最前面一个字符
</code></pre><p>复制</p>
<pre><code>y1G        复制光标所在行到第一行的所有数据
yG        复制光标所在行到最后一行的所有数据
y0        复制光标所在的那个字符到该行行首的所有数据
y$        复制光标所在的那个字符到该行行尾的所有数据
</code></pre><p>粘贴</p>
<pre><code>p,P        p粘贴到光标所在行的下一行,P所在行的上一行
</code></pre><p>撤销</p>
<pre><code>u        复原上一个动作
</code></pre><p>重复执行</p>
<pre><code>ctrl+r    再执行一次上一个动作；也可以按小数点&apos;.&apos; 一样的效果
</code></pre><p>替换<br>    r,R     r 会取代光标所在的那一个字符； R 会一直取代光标所在的文字，直到按下 ESC 为止</p>
<p>执行其他命令<br>    :! command        离开 vi 到指令列模式下执行 command 的显示结果<br>行数<br>    :set nu, :set nonu         显示行数和取消行数</p>
<p>翻页，移动光标<br>    ctrl +f, +b, +d, +u             向后，前翻一页，向后，前翻半页<br>    h, j, k, l                      左，下，上，右<br>    +, -                            移动下一行，上一行的非空格符号<br>    n<space>， n<enter>             向右移动n 个字符, 向下移动n行<br>    0, $                            移动行首,行尾<br>    H, M, L                         移动到屏幕的第一行，最后一行，中间行。<br>    G, nG, gg                       移动文档最后一行,第n行，第一行</enter></space></p>
<p>搜索<br>    n， N                    向后，前继续搜索</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;vim&quot;&gt;&lt;a href=&quot;#vim&quot; class=&quot;headerlink&quot; title=&quot;vim&quot;&gt;&lt;/a&gt;vim&lt;/h2&gt;&lt;p&gt;删除&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x, X       x 为向后删除一个字符, X为向前删除一个字符
nx         连续
    
    </summary>
    
      <category term="Linux" scheme="https://duansiman.github.io/categories/Linux/"/>
    
    
      <category term="Vim命令" scheme="https://duansiman.github.io/tags/Vim%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Linux疑难杂症解决方法</title>
    <link href="https://duansiman.github.io/2017/04/17/Linux%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87%E8%A7%A3%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://duansiman.github.io/2017/04/17/Linux疑难杂症解解决方法/</id>
    <published>2017-04-17T02:47:21.000Z</published>
    <updated>2017-06-26T01:58:46.269Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ssh远程主机被拒绝"><a href="#ssh远程主机被拒绝" class="headerlink" title="ssh远程主机被拒绝"></a>ssh远程主机被拒绝</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">epdc@epdc-ThinkPad-T550:~$ ssh localhost</div><div class="line">ssh: connect to host localhost port 22: Connection refused</div></pre></td></tr></table></figure>
<p>sudo apt-get install openssh-server</p>
<h2 id="etc-sudoers文件被破坏"><a href="#etc-sudoers文件被破坏" class="headerlink" title="/etc/sudoers文件被破坏"></a>/etc/sudoers文件被破坏</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">epdc@epdc-ThinkPad-T550:/etc$ sudo gedit sudoers</div><div class="line">&gt;&gt;&gt; /etc/sudoers: syntax error near line 1 &lt;&lt;&lt;</div><div class="line">&gt;&gt;&gt; /etc/sudoers: syntax error near line 1 &lt;&lt;&lt;</div><div class="line">sudo：/etc/sudoers 中第 1 行附近有解析错误</div><div class="line">sudo：no valid sudoers sources found, quitting</div><div class="line">sudo：无法初始化策略插件</div></pre></td></tr></table></figure>
<ul>
<li>重启ubuntu，启动时按Esc或Shift键，可以看到引导选项；</li>
<li>在引导选项中选择Recovery模式的那一项来引导；</li>
<li>进入Recovery Menu页面，选择root，也就是进入试用root用户进行系统恢复，在这里可以执行超级用户的权限的操作，回车后可以看到熟悉的 root@user ~# 命令提示符；</li>
<li><p>设置或者撤销/etc/sudoers文件的权限，也可以将该文件改回到发生错误之前的状态。</p>
<p>  chmod 666 /dev/null<br>  mount -o remount rw /<br>  vi /etc/sudoers<br>  恢复本文件内容并存盘</p>
</li>
<li>退出Recovery模式，重新启动ubuntu。</li>
</ul>
<h2 id="无法解析或打开软件包的列表或是状态文件解决方案"><a href="#无法解析或打开软件包的列表或是状态文件解决方案" class="headerlink" title="无法解析或打开软件包的列表或是状态文件解决方案"></a>无法解析或打开软件包的列表或是状态文件解决方案</h2><pre><code>E: Encountered a section with no Package: header
E: Problem with MergeList /var/lib/apt/lists/cn.archive.ubuntu.com_ubuntu_dists_
natty_main_i18n_Translation-en
</code></pre><p>sudo rm /var/lib/apt/lists/* -vf</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ssh远程主机被拒绝&quot;&gt;&lt;a href=&quot;#ssh远程主机被拒绝&quot; class=&quot;headerlink&quot; title=&quot;ssh远程主机被拒绝&quot;&gt;&lt;/a&gt;ssh远程主机被拒绝&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
    
    </summary>
    
      <category term="Linux" scheme="https://duansiman.github.io/categories/Linux/"/>
    
    
      <category term="Linux问题解决方法" scheme="https://duansiman.github.io/tags/Linux%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
